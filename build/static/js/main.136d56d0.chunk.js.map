{"version":3,"sources":["context.js","services/utilsService.js","services/httpService.js","services/authService.js","services/animeService.js","hooks/usePagination.js","hooks/types.js","providers/animeProvider.jsx","components/partials/nav.jsx","components/partials/tableHeader.jsx","components/partials/tableBody.jsx","components/partials/table.jsx","components/animes/paginate.jsx","components/animes/animesTable.jsx","components/partials/spinner.jsx","components/searchForm.jsx","components/partials/headerTitle.jsx","components/home.jsx","components/partials/notFound.jsx","hooks/useAnime.js","components/partials/input.jsx","components/partials/form.jsx","components/animes/animeForm.jsx","components/auth/loginForm.jsx","components/auth/registerForm.jsx","components/partials/authRoute.jsx","components/partials/guestRoute.jsx","hooks/useRequest.js","components/genres/genresTable.jsx","routes.jsx","App.js","serviceWorker.js","index.js"],"names":["AnimeContext","React","createContext","sortBy","items","sortColumn","_","orderBy","path","order","formatDate","date","Date","toLocaleDateString","mapToSelect","_ref","id","name","label","capitalize","value","str","startCase","axios","interceptors","response","use","error","config","data","status","toast","Promise","reject","throwError","request","baseURL","appUrl","httpService","get","post","put","delete","setJwt","token","headers","Authorization","concat","saveJwt","refreshToken","localStorage","setItem","_callee","user","regenerator_default","a","wrap","_context","prev","next","http","then","jwt","abrupt","sent","stop","this","_callee2","_ref2","_context2","getDecodeToken","getItem","Object","objectSpread","jwtDecode","ex","authService","login","register","logout","removeItem","res","getCurrentUser","isUsernameTaken","username","isEmailTaken","email","isValidUser","isAdmin","getPagedAnimes","num","limit","title","arguments","length","undefined","getGenres","getAnime","getSeasons","getTypes","postAnime","anime","auth","putAnime","reducer","state","action","payload","type","pageNum","pages","total","refresh","usePagination","_ref$data","_ref$pages","_ref$total","_ref$take","take","initialState","_useReducer","useReducer","_useReducer2","slicedToArray","_useReducer2$","rest","objectWithoutProperties","dispatch","useEffect","catch","memo","props","_usePagination","pagination","perPage","_usePagination$state","animes","react_default","createElement","Provider","children","Nav","Fragment","className","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","href","onClick","jsx","TableHeader","columns","map","column","i","key","onSort","raiseSort","renderSortIcon","TableBody","item","content","renderCell","Table","tableHeader","tableBody","Paginate","start","end","setStart","setEnd","PAGE_NUMBERS","pageNumbers","_useContext","useContext","_useContext$state","handlePageChange","_pageNum","isNavHidden","isFirstDisabled","isLastDisabled","arr","push","createArray","doNext","Animes","_useState","useState","_useState2","setSortColumn","renderItemsName","genres","studios","asyncToGenerator","mark","doDelete","_animes","toConsumableArray","filter","_x","apply","table","c","releaseDate","paginate","Spinner","isLoaded","role","SearchForm","setTitle","handleSubmit","e","preventDefault","onSubmit","onChange","target","placeholder","jxs","HeaderTitle","_useState3","_useState4","handleRefresh","paginateProps","headerTitle","searchForm","spinner","animesTable","NotFound","useAnime","seasons","types","g","Input","htmlFor","assign","Form","setData","errors","setErrors","schema","validate","Joi","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","details","Symbol","iterator","done","message","err","return","handleChange","_ref4","input","currentTarget","_errors","errorMessage","_ref3","obj","defineProperty","_schema","validateProperty","newErrors","checkConfirmPassword","password","_data","doSubmit","renderButton","disabled","keys","renderInput","partials_input","renderTextArea","row","rows","renderDatePicker","es","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","placeholderText","renderSelect","options","react_select_esm","isSearchable","isClearable","context","match","params","_useAnime$state","description","season","setAnime","_useState5","_useState6","selectedGenres","setSelectedGenres","_useState7","_useState8","selectedStudios","setSelectedStudios","_useState9","_useState10","selectedSeason","setSelectedSeason","_useState11","_useState12","selectedType","setSelectedType","number","integer","string","min","required","optional","imageUrl","array","loadAnime","_anime","_mapToData","_selectedGenres","_selectedStudios","_selectedSeason","_selectedType","mapToData","t0","history","replace","s","genreIds","studioIds","toISOString","success","handleChangeGenres","handleChangeSeason","handleChangeType","handleChangeStudios","handleDateChange","partials_form","isMulti","LoginForm","setUser","_x2","RegisterForm","confirmPassword","valid","ref","language","any","allowOnly","handleCheckUser","isTaken","_user","_ref6","onBlur","AuthRoute","Component","component","render","Route","Redirect","pathname","from","location","GuestRoute","useRequest","GenresTable","_useRequest","genre","Routes","Switch","authRoute","Home","guestRoute","AnimeForm","exact","App","animeProvider","nav","lib","autoClose","routes","Boolean","window","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.136d56d0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const AnimeContext = React.createContext({})\r\n","import _ from 'lodash'\r\n\r\nexport function sortBy(items, sortColumn) {\r\n  return _.orderBy(items, [sortColumn.path], [sortColumn.order])\r\n}\r\n\r\nexport function toElipse(str, end = 20) {\r\n  const x = str.substring(0, end)\r\n  const hasElipse = str.length > end ? '...' : ''\r\n  return `${x} ${hasElipse}`\r\n}\r\n\r\nexport const formatDate = date => {\r\n  return date ? new Date(date).toLocaleDateString() : null\r\n}\r\n\r\nexport const createArray = (start, end) => {\r\n  let arr = []\r\n  for (let i = start; i <= end; i++) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n\r\nexport const mapToSelect = ({ id, name }) => {\r\n  return { id, label: capitalize(name), value: name }\r\n}\r\n\r\nexport const capitalize = str => _.startCase(str)\r\n","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { appUrl } from '../config.json'\r\n\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    return throwError(error)\r\n  }\r\n)\r\n\r\naxios.interceptors.request.use(config => {\r\n  config.baseURL = appUrl\r\n  return config\r\n})\r\n\r\nfunction setJwt({ token }) {\r\n  axios.interceptors.request.use(config => {\r\n    config.headers.Authorization = `Bearer ${token}`\r\n\r\n    return config\r\n  })\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  axios,\r\n  setJwt\r\n}\r\n\r\nfunction saveJwt({ token, refreshToken }) {\r\n  localStorage.setItem('access-token', token)\r\n\r\n  localStorage.setItem('refresh-token', refreshToken)\r\n}\r\nlet isRefreshing = false\r\n\r\nfunction throwError(error) {\r\n  const config = error.config\r\n\r\n  if (error.response && error.response.data.status.name === 'ExpiredJwtToken') {\r\n    toast.error('jwt is expired')\r\n    return Promise.reject(error)\r\n  }\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500\r\n  if (!expectedError) {\r\n    toast.error('An unexpected error occurrred.')\r\n  }\r\n  return Promise.reject(error)\r\n\r\n  // if (error.response && error.response.data.status.name === 'ExpiredJwtToken') {\r\n  //   if (!isRefreshing) {\r\n  //     isRefreshing = true\r\n  //     axios.interceptors.request.use(config => {\r\n  //       config.headers.Authorization = `Bearer ${localStorage.getItem(\r\n  //         'access-token'\r\n  //       )}`\r\n\r\n  //       return config\r\n  //     })\r\n  //     axios\r\n  //       .post('/token/refresh', {\r\n  //         refreshToken: localStorage.getItem('refresh-token')\r\n  //       })\r\n  //       .then((data,x) => {\r\n  //         console.log(data,x)\r\n  //         // saveJwt(data.data.jwt)\r\n  //         isRefreshing = false\r\n  //       })\r\n  //   }\r\n  //   return config\r\n  // }\r\n}\r\n","import http from './httpService'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nfunction saveJwt({ token, refreshToken }) {\r\n  localStorage.setItem('access-token', token)\r\n  localStorage.setItem('refresh-token', refreshToken)\r\n}\r\n\r\nasync function login(user) {\r\n  return await http.post('/auth/login', user).then(data => {\r\n    saveJwt(data.data.jwt)\r\n  })\r\n}\r\n\r\nasync function register(user) {\r\n  const { jwt } = await http\r\n    .post('/auth/register', user)\r\n    .then(data => data.data)\r\n\r\n  if (!jwt) return false\r\n\r\n  saveJwt(jwt)\r\n  return true\r\n}\r\n\r\nfunction logout() {\r\n  http.setJwt(jwt())\r\n  localStorage.removeItem('refresh-token')\r\n  localStorage.removeItem('access-token')\r\n  http\r\n    .post('/token/revoke', { refreshToken: jwt().refreshToken })\r\n    .then(res => {})\r\n}\r\n\r\nfunction getDecodeToken() {\r\n  try {\r\n    const token = localStorage.getItem('access-token')\r\n    return { ...jwtDecode(token) }\r\n  } catch (ex) {\r\n    return null\r\n  }\r\n}\r\n\r\nconst getCurrentUser = () =>\r\n  getDecodeToken() ? { ...getDecodeToken().data } : null\r\n\r\nconst isValidUser = () => (getDecodeToken() ? true : false)\r\n\r\nconst isAdmin = () => (getDecodeToken() ? getDecodeToken().data.isAdmin : null)\r\n\r\nfunction isUsernameTaken(username) {\r\n  return http.get('/auth/is-taken?username=' + username).then(data => data.data)\r\n}\r\n\r\nfunction isEmailTaken(email) {\r\n  return http.get('/auth/is-taken?email=' + email).then(data => data.data)\r\n}\r\n\r\nconst jwt = () => {\r\n  return {\r\n    token: localStorage.getItem('access-token'),\r\n    refreshToken: localStorage.getItem('refresh-token')\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  register,\r\n  logout,\r\n  getCurrentUser,\r\n  isUsernameTaken,\r\n  isEmailTaken,\r\n  jwt,\r\n  isValidUser,\r\n  isAdmin\r\n}\r\n","import http from './httpService'\r\nimport auth from './authService'\r\n\r\nexport function getAnimes() {\r\n  return http.get('/api/animes').then(data => data.data)\r\n}\r\n\r\nexport function getPagedAnimes(num, limit, title = '') {\r\n\r\n  return http\r\n    .get(`/api/animes/page/${num}?limit=${limit}&title=${title}`)\r\n    .then(data => data.data.data)\r\n}\r\n\r\nexport function getGenres() {\r\n  return http.get('/api/genres').then(data => data.data)\r\n}\r\n\r\nexport function getStudios() {\r\n  return http.get('/api/studios').then(data => data.data)\r\n}\r\n\r\nexport function getAnime(id) {\r\n  return http.get(`/api/animes/${id}`).then(data => data.data)\r\n}\r\n\r\nexport const getSeasons = [\r\n  { label: 'Winter', value: 'winter' },\r\n  { label: 'Spring', value: 'spring' },\r\n  { label: 'Summer', value: 'summer' },\r\n  { label: 'Fall', value: 'fall' }\r\n]\r\n\r\nexport const getTypes = [\r\n  { label: 'TV', value: 'tv' },\r\n  { label: 'Movie', value: 'movie' },\r\n  { label: 'OVA', value: 'ova' },\r\n  { label: 'ONA', value: 'ona' },\r\n  { label: 'Other', value: 'other' }\r\n]\r\n\r\nexport function postAnime(anime) {\r\n  http.setJwt(auth.jwt())\r\n  return http.post('/api/animes', anime).then(data => data.data)\r\n}\r\n\r\nexport function putAnime(id, anime) {\r\n  http.setJwt(auth.jwt())\r\n  return http.put('/api/animes/' + id, anime).then(data => data.data)\r\n}\r\n\r\nexport function deleteAnime(id) {\r\n  http.setJwt(auth.jwt())\r\n  return http.delete('/api/animes/' + id).then(data => data.data)\r\n}\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n  SET_ITEMS,\r\n  SET_PAGENUM,\r\n  SET_PAGES,\r\n  SET_TOTAL,\r\n  SET_REFRESH,\r\n  SEARCH_ITEMS\r\n} from './types'\r\n\r\nconst reducer = (state, action) => {\r\n  const { payload, type } = action\r\n  switch (type) {\r\n    case SET_PAGENUM:\r\n      return { ...state, pageNum: payload }\r\n    case SET_ITEMS:\r\n      return { ...state, items: payload }\r\n    case SET_PAGES:\r\n      return { ...state, pages: payload }\r\n    case SET_TOTAL:\r\n      return { ...state, total: payload }\r\n    case SET_REFRESH:\r\n      return { ...state, refresh: payload }\r\n    case SEARCH_ITEMS:\r\n      return { ...state, title: payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// customize the properties of response data in the usePagination arguments\r\n//\r\n//\r\n// consume usePagination e.g.\r\n// const { state: { items: movies, pageNum, pages, total }, dispatch}\r\n// = usePagination({ request: getMovies, take: 10, total: 'count', pages: 'pagesCount', data: 'movies' })\r\n\r\nconst usePagination = ({\r\n  request,\r\n  data = 'data',\r\n  pages = 'lastPage',\r\n  total = 'total',\r\n  take = 15\r\n}) => {\r\n  const initialState = {\r\n    items: [],\r\n    pageNum: 1,\r\n    pages: 0,\r\n    total: 0,\r\n    take,\r\n    refresh: false\r\n  }\r\n  const [{ refresh, title, pageNum, ...rest }, dispatch] = useReducer(\r\n    reducer,\r\n    initialState\r\n  )\r\n\r\n  useEffect(\r\n    () => {\r\n      request(pageNum, take, title)\r\n        .then(response => {\r\n          dispatch({ type: SET_ITEMS, payload: response[data] })\r\n          dispatch({ type: SET_PAGES, payload: response[pages] })\r\n          dispatch({ type: SET_TOTAL, payload: response[total] })\r\n        })\r\n        .catch(({ response }) => {\r\n          if (response && response.status === 404) {\r\n            dispatch({ type: SET_ITEMS, payload: [] })\r\n            dispatch({ type: SET_PAGES, payload: 0 })\r\n            dispatch({ type: SET_TOTAL, payload: 0 })\r\n            dispatch({ type: SET_PAGENUM, payload: 1 })\r\n            toast.error('No result/s found')\r\n          }\r\n        })\r\n    },\r\n    [refresh, title, pageNum]\r\n  )\r\n\r\n  return {\r\n    state: { refresh, pageNum, take, ...rest },\r\n    dispatch\r\n  }\r\n}\r\n\r\nexport default usePagination\r\n","export const SET_ITEMS = 'SET_ITEMS' // array\r\nexport const SET_PAGENUM = 'SET_PAGENUM' // number, active page\r\nexport const SET_PAGES = 'SET_PAGES' // number, total no. of pages\r\nexport const SET_TOTAL = 'SET_TOTAL' // number, total no. of items\r\nexport const SET_REFRESH = 'SET_REFRESH' // boolean, do reload page\r\nexport const SEARCH_ITEMS = 'SEARCH_ITEMS'\r\nexport const DELETE_ITEM = 'DELETE_ITEM'\r\n","import React, { memo } from 'react'\r\nimport { AnimeContext } from '../context'\r\nimport { pagination } from '../config.json'\r\nimport { sortBy } from '../services/utilsService'\r\nimport { getPagedAnimes } from '../services/animeService'\r\nimport usePagination from '../hooks/usePagination'\r\n\r\nconst AnimeProvider = props => {\r\n  const {\r\n    state: { pageNum, items: animes, pages, total },\r\n    dispatch\r\n  } = usePagination({ request: getPagedAnimes, take: pagination.perPage })\r\n\r\n  return (\r\n    <AnimeContext.Provider\r\n      value={{\r\n        state: { animes, pages, pageNum, total },\r\n        dispatch\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AnimeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default memo(AnimeProvider)\r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport auth from '../../services/authService'\r\nimport { capitalize } from '../../services/utilsService'\r\n\r\nconst Nav = props => {\r\n  const handleLogout = () => {\r\n    auth.logout()\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            KITCHANIME\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div\r\n            className=\"collapse navbar-collapse d-flex justify-content-end\"\r\n            id=\"navbarNav\"\r\n          >\r\n            <ul className=\"navbar-nav\">\r\n              {auth.isValidUser() && (\r\n                <React.Fragment>\r\n                  <i className=\"fa fa-user  text-warning\" />\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link active\" to=\"/home\">\r\n                      {capitalize(auth.getCurrentUser().username)}\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      className=\"nav-link\"\r\n                      href=\"/login\"\r\n                      onClick={handleLogout}\r\n                    >\r\n                      Logout\r\n                    </a>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n\r\n              {!auth.isValidUser() && (\r\n                <React.Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/login\">\r\n                      Login\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/register\">\r\n                      Register\r\n                    </NavLink>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <style jsx>{`\r\n          .navbar {\r\n            margin-bottom: 20px;\r\n          }\r\n          .fa-user {\r\n            margin-top: 12px !important;\r\n          }\r\n        `}</style>\r\n      </nav>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React, { PureComponent } from 'react'\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nconst TableHeader = props => {\n  const raiseSort = path => {\n    const sortColumn = { ...props.sortColumn }\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc'\n    else {\n      sortColumn.path = path\n      sortColumn.order = 'asc'\n    }\n    props.onSort(sortColumn)\n  }\n\n  const renderSortIcon = column => {\n    const { sortColumn } = props\n\n    if (!column.path) return null\n\n    if (column.path !== sortColumn.path) return null\n\n    if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\" />\n    return <i className=\"fa fa-sort-desc\" />\n  }\n\n  return (\n    <thead className=\"thead-dark\">\n      <tr>\n        {props.columns.map((column, i) => (\n          <th\n            className=\"clickable\"\n            key={i}\n            onClick={() => raiseSort(column.path)}\n          >\n            {column.label} {renderSortIcon(column)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\n\nexport default TableHeader\n","import React from 'react'\nimport _ from 'lodash'\n\nconst TableBody = ({ data, columns }) => {\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item)\n\n    return _.get(item, column.path)\n  }\n\n  return (\n    <tbody>\n      {data.map(item => (\n        <tr key={item.id}>\n          {columns.map((column, i) => (\n            <td key={i}>{renderCell(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  )\n}\n\nexport default TableBody\n","import React from 'react'\nimport TableHeader from './tableHeader'\nimport TableBody from './tableBody'\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table table-bordered table-hover \">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  )\n}\n\nexport default Table\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { AnimeContext } from '../../context'\r\nimport { createArray } from '../../services/utilsService'\r\nimport { pagination } from '../../config.json'\r\nimport { SET_PAGENUM, SET_REFRESH } from '../../hooks/types'\r\n\r\nconst Paginate = ({ start, end, setStart, setEnd }) => {\r\n  const { pageNumbers: PAGE_NUMBERS } = pagination\r\n\r\n  const {\r\n    dispatch,\r\n    state: { pageNum, pages }\r\n  } = useContext(AnimeContext)\r\n\r\n  const doNext = pageNum => {\r\n    handlePageChange(pageNum + 1)\r\n    if (end === pages) return\r\n    setStart(start + 1)\r\n    setEnd(end + 1)\r\n  }\r\n\r\n  //reset start end when delete is 0 in paged\r\n  useEffect(\r\n    () => {\r\n      if (end > pages && start !== 1) {\r\n        setStart(start - 1)\r\n        setEnd(end - 1)\r\n      }\r\n    },\r\n    [pageNum]\r\n  )\r\n\r\n  const handlePageChange = _pageNum => {\r\n    if (pageNum === _pageNum) return\r\n    dispatch({ type: SET_PAGENUM, payload: _pageNum })\r\n    // dispatch({ type: SET_REFRESH, payload: new Date() })\r\n  }\r\n\r\n  const doPrev = _pageNum => {\r\n    handlePageChange(_pageNum - 1)\r\n\r\n    if (start === 1) return\r\n    setStart(start - 1)\r\n    setEnd(end - 1)\r\n  }\r\n\r\n  const renderPages = () => {\r\n    let _end = pages < PAGE_NUMBERS ? pages : end\r\n\r\n    return createArray(start, _end).map(_pageNum => (\r\n      <li\r\n        key={_pageNum}\r\n        className={pageNum === _pageNum ? 'page-item active' : 'page-item'}\r\n      >\r\n        <button\r\n          className=\"page-link\"\r\n          onClick={() => handlePageChange(_pageNum)}\r\n        >\r\n          {_pageNum}\r\n        </button>\r\n      </li>\r\n    ))\r\n  }\r\n\r\n  const isNavHidden = () => {\r\n    return pages > PAGE_NUMBERS\r\n  }\r\n\r\n  const isPagesHidden = () => {\r\n    return pages > 1\r\n  }\r\n\r\n  const isFirstDisabled = () => {\r\n    return pageNum === 1 ? 'disabled' : ''\r\n  }\r\n\r\n  const isLastDisabled = () => {\r\n    return pages === pageNum ? 'disabled' : ''\r\n  }\r\n\r\n  const prevPage = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <li className={`page-item ${isFirstDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={() => {\r\n              if (pageNum === 1) return\r\n              handlePageChange(1)\r\n              setStart(1)\r\n              setEnd(PAGE_NUMBERS)\r\n            }}\r\n          >\r\n            {'first'}\r\n          </button>\r\n        </li>\r\n\r\n        <li className={`page-item ${isFirstDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Previous\"\r\n            onClick={() => doPrev(pageNum)}\r\n          >\r\n            &laquo;\r\n          </button>\r\n        </li>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const nextPage = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <li className={`page-item ${isLastDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Next\"\r\n            onClick={() => doNext(pageNum)}\r\n          >\r\n            &raquo;\r\n          </button>\r\n        </li>\r\n\r\n        <li className={`page-item ${isLastDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={() => {\r\n              handlePageChange(pages)\r\n              setStart(pages - (PAGE_NUMBERS - 1))\r\n              setEnd(pages)\r\n            }}\r\n          >\r\n            {'last'}\r\n          </button>\r\n        </li>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const pageOf = () => {\r\n    return (\r\n      <div className=\"pages px-0 col d-flex justify-content-end\">\r\n        <p className=\"page-of\">{`${pageNum} of ${pages}`}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col d-flex justify-content-start px-0\">\r\n          <nav>\r\n            <ul className=\"pagination\">\r\n              {isNavHidden() && prevPage()}\r\n\r\n              {isPagesHidden() && renderPages()}\r\n\r\n              {isNavHidden() && nextPage()}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        {pageOf()}\r\n        <style jsx>\r\n          {`\r\n            .pages {\r\n              text-align: right;\r\n            }\r\n            .page-of {\r\n              margin-top: 10px;\r\n            }\r\n          `}\r\n        </style>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AnimeContext } from '../../context'\r\nimport Table from '../partials/table'\r\nimport { formatDate } from '../../services/utilsService'\r\nimport auth from '../../services/authService'\r\nimport { toast } from 'react-toastify'\r\nimport { sortBy } from '../../services/utilsService'\r\nimport { SET_ITEMS, SET_PAGENUM, SET_REFRESH } from '../../hooks/types'\r\nimport { deleteAnime } from '../../services/animeService'\r\nimport Paginate from './paginate'\r\n\r\nconst Animes = props => {\r\n  const {\r\n    state: { animes, pageNum },\r\n    dispatch\r\n  } = useContext(AnimeContext)\r\n  const [sortColumn, setSortColumn] = useState({ path: 'name', order: 'asc' })\r\n\r\n  const columns = [\r\n    {\r\n      path: 'title',\r\n      label: 'Title',\r\n      content: anime => <Link to={`/animes/${anime.id}`}>{anime.title}</Link>\r\n    },\r\n    { path: 'season', label: 'Season' },\r\n    {\r\n      path: 'releaseDate',\r\n      label: 'Release'\r\n    },\r\n    {\r\n      path: 'type',\r\n      label: 'Type'\r\n    },\r\n    {\r\n      label: 'Genres',\r\n      content: anime => renderItemsName(anime.genres)\r\n    },\r\n    {\r\n      label: 'Studios',\r\n      content: anime => renderItemsName(anime.studios)\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: anime => (\r\n        <div className=\"\">\r\n          <Link to={`/animes/${anime.id}`}>\r\n            <button className=\"btn btn-warning btn-sm mr-1 fa fa-pencil text-white\" />\r\n          </Link>\r\n          <button\r\n            onClick={async () => await doDelete(anime)}\r\n            className=\"btn btn-danger btn-sm fa fa-trash text-white\"\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const doDelete = async anime => {\r\n    if (!auth.isAdmin()) {\r\n      toast.error('Unauthorized user')\r\n      return\r\n    }\r\n\r\n    let _animes = [...animes]\r\n\r\n    _animes = _animes.filter(a => a.id !== anime.id)\r\n\r\n    dispatch({ type: SET_ITEMS, payload: _animes })\r\n\r\n    await deleteAnime(anime.id)\r\n\r\n    if (_animes.length === 0) {\r\n      const { start, end, setStart, setEnd } = props\r\n      dispatch({ type: SET_PAGENUM, payload: pageNum - 1 })\r\n      setStart(start - 1)\r\n      setEnd(end - 1)\r\n      return\r\n    }\r\n    dispatch({ type: SET_REFRESH, payload: new Date() })\r\n  }\r\n\r\n  const renderItemsName = items => {\r\n    return items.map((item, i) => (\r\n      <span key={i} className=\"badge ml-1  badge-secondary\">\r\n        {item.name}\r\n      </span>\r\n    ))\r\n  }\r\n\r\n  const transformAnimes = () => {\r\n    return animes.map(anime => {\r\n      // not included to table anymore\r\n      // anime.description = toElipse(anime.description || '', 20)\r\n      // anime.imageUrl = toElipse(anime.imageUrl || '', 20)\r\n      anime.releaseDate = formatDate(anime.releaseDate)\r\n      return anime\r\n    })\r\n  }\r\n\r\n  const handleSort = sortColumn => {\r\n    dispatch({ type: SET_ITEMS, payload: sortBy(animes, sortColumn) })\r\n    setSortColumn(sortColumn)\r\n  }\r\n\r\n  const withColumnActions = () => {\r\n    if (auth.isAdmin()) return columns\r\n\r\n    const _columns = [...columns]\r\n    return _columns.filter(c => c.key !== 'actions')\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table\r\n        columns={withColumnActions()}\r\n        data={transformAnimes()}\r\n        sortColumn={sortColumn}\r\n        onSort={handleSort}\r\n      />\r\n      <Paginate {...props} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Animes\r\n","import React from 'react'\r\n\r\nconst Spinner = ({ isLoaded, children }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {!isLoaded && (\r\n        <div className=\"spin d-flex justify-content-center justify-items-center\">\r\n          <div className=\"spinner spinner-grow\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isLoaded && children}\r\n      <style jsx>{`\r\n        .spin {\r\n          position: fixed;\r\n          z-index: 1031;\r\n          top: 40%;\r\n          left: 50%;\r\n          transform: translate(-50%, -50%);\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useContext, useState } from 'react'\r\nimport { AnimeContext } from './../context'\r\nimport { SEARCH_ITEMS, SET_PAGENUM } from '../hooks/types'\r\nimport { pagination } from '../config.json'\r\n\r\nconst SearchForm = props => {\r\n  const { dispatch } = useContext(AnimeContext)\r\n  const [title, setTitle] = useState('')\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault()\r\n    if (!title) return\r\n    props.setStart(1)\r\n    props.setEnd(pagination.pageNumbers)\r\n    dispatch({ type: SET_PAGENUM, payload: 1 })\r\n    dispatch({ type: SEARCH_ITEMS, payload: title })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type={'text'}\r\n          name={title}\r\n          value={title}\r\n          onChange={e => setTitle(e.target.value)}\r\n          className=\"form-control\"\r\n          placeholder=\"Search title\"\r\n        />\r\n        <button className=\"btn btn-primary ml-2 mb-2\">Search</button>\r\n      </form>\r\n      <style jxs>{`\r\n      form {\r\n        display:flex;\r\n      }\r\n     \r\n     `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\n\r\nconst HeaderTitle = ({ total, title }) => {\r\n  return (\r\n    <div className=\"row no-gutters align-items-center\">\r\n      <div className=\"col  d-flex justify-content-start align-items-center\">\r\n        <span>\r\n          <h1 className=\"mb-3\">{title}</h1>\r\n        </span>\r\n        <h5>\r\n          <span className=\"badge badge-pill badge-primary ml-2\">{total}</span>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeaderTitle\r\n","import React, { useContext, memo, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AnimesTable from './animes/animesTable'\r\nimport { AnimeContext } from './../context'\r\nimport Spinner from './partials/spinner'\r\nimport auth from '../services/authService'\r\nimport SearchForm from './searchForm'\r\nimport { SEARCH_ITEMS } from '../hooks/types'\r\nimport { pagination } from '../config.json'\r\nimport HeaderTitle from './partials/headerTitle'\r\n\r\nconst Home = props => {\r\n  const { state, dispatch } = useContext(AnimeContext)\r\n\r\n  const { pageNumbers: PAGE_NUMBERS } = pagination\r\n\r\n  const [start, setStart] = useState(1)\r\n  const [end, setEnd] = useState(PAGE_NUMBERS)\r\n\r\n  const renderHeader = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <HeaderTitle total={state.total} title={'Animes'} />\r\n        <div className=\"row no-gutters \">\r\n          <div className=\"col-7 d-flex justify-content-start \">\r\n            {auth.isAdmin() && (\r\n              <Link to=\"/animes/new\">\r\n                <button className=\"btn fa fa-plus btn-success btn-lg mr-2 mt-1\" />\r\n              </Link>\r\n            )}\r\n            <div>\r\n              <Link to=\"/\">\r\n                <button\r\n                  onClick={handleRefresh}\r\n                  className=\"btn fa fa-refresh btn-secondary btn-lg mt-1\"\r\n                />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-5 mb-2  \">\r\n            <SearchForm {...paginateProps} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const handleRefresh = () => {\r\n    dispatch({ type: SEARCH_ITEMS, payload: '' })\r\n  }\r\n\r\n  const paginateProps = {\r\n    start,\r\n    end,\r\n    setStart,\r\n    setEnd\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {renderHeader()}\r\n      <Spinner isLoaded={state.total > 0}>\r\n        <AnimesTable {...paginateProps} />\r\n      </Spinner>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(Home)\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>\r\n}\r\n\r\nexport default NotFound\r\n","import { useEffect, useReducer } from 'react'\r\nimport {\r\n  getGenres,\r\n  getStudios,\r\n  getSeasons,\r\n  getTypes,\r\n  getAnime\r\n} from '../services/animeService'\r\nimport { mapToSelect, formatDate } from '../services/utilsService'\r\n\r\nexport const SET_GENRES = 'SET_GENRES'\r\nexport const SET_STUDIOS = 'SET_STUDIOS'\r\nexport const SET_SEASONS = 'SET_SEASONS'\r\nexport const SET_TYPES = 'SET_TYPES'\r\n\r\nconst useAnime = () => {\r\n  const reducer = (state, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n      case SET_GENRES:\r\n        return { ...state, genres: payload }\r\n      case SET_STUDIOS:\r\n        return { ...state, studios: payload }\r\n      case SET_SEASONS:\r\n        return { ...state, seasons: payload }\r\n      case SET_TYPES:\r\n        return { ...state, types: payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  const initialState = {\r\n    genres: [],\r\n    studios: [],\r\n    types: [],\r\n    seasons: []\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    getGenres().then(response => {\r\n      dispatch({\r\n        type: SET_GENRES,\r\n        payload: response.genres.map(g => {\r\n          return mapToSelect(g)\r\n        })\r\n      })\r\n    })\r\n\r\n    getStudios().then(response => {\r\n      dispatch({\r\n        type: SET_STUDIOS,\r\n        payload: response.studios.map(g => {\r\n          return mapToSelect(g)\r\n        })\r\n      })\r\n    })\r\n\r\n    dispatch({\r\n      type: SET_SEASONS,\r\n      payload: getSeasons\r\n    })\r\n    dispatch({\r\n      type: SET_TYPES,\r\n      payload: getTypes\r\n    })\r\n  }, [])\r\n\r\n  return { state, dispatch }\r\n}\r\n\r\nexport default useAnime\r\n","import React from 'react'\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {/* {error && <div className=\"alert p-2 mt-2 alert-danger\">{error}</div>} */}\n      {error && <p className=\"text-danger p-2 \">{error}</p>}\n    </div>\n  )\n}\n\nexport default Input\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Input from './input'\r\nimport DatePicker from 'react-datepicker'\r\nimport Select from 'react-select'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nconst Form = props => {\r\n  const { data, setData } = props.data || {}\r\n  const { errors, setErrors } = props.errors || {}\r\n  const schema = { ...props.schema }\r\n\r\n  const renderDatePicker = (name, label, rest) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <div>\r\n          <DatePicker\r\n            peekNextMonth\r\n            showMonthDropdown\r\n            showYearDropdown\r\n            dropdownMode=\"select\"\r\n            placeholderText=\"Select a date\"\r\n            className=\"form-control\"\r\n            value={data[name]}\r\n            {...rest}\r\n          />\r\n        </div>\r\n        {errors[name] && (\r\n          <div className=\"alert p-2 mt-2 alert-danger\">{errors[name]}</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderTextArea = (name, label, row = 3) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <textarea\r\n          value={data[name]}\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          id={name}\r\n          rows={row}\r\n          name={name}\r\n        />\r\n        {errors[name] && (\r\n          <div className=\"alert p-2 mt-2 alert-danger\">{errors[name]}</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const validate = () => {\r\n    const options = { abortEarly: false }\r\n    const { error } = Joi.validate(data, schema, options)\r\n\r\n    if (!error) return null\r\n\r\n    const errors = {}\r\n    for (let item of error.details) errors[item.path[0]] = item.message\r\n    return errors\r\n  }\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value }\r\n\r\n    const _schema = { [name]: schema[name] }\r\n\r\n    const { error } = Joi.validate(obj, _schema)\r\n\r\n    return error ? error.details[0].message : null\r\n  }\r\n\r\n  const handleSubmit = (e, doSubmit) => {\r\n    e.preventDefault()\r\n\r\n    const errors = validate()\r\n    setErrors(errors || {})\r\n    if (errors) return\r\n\r\n    doSubmit(e, data)\r\n  }\r\n\r\n  const handleChange = ({ currentTarget: input }) => {\r\n    const _errors = { ...errors }\r\n    const errorMessage = validateProperty(input)\r\n\r\n    if (errorMessage) _errors[input.name] = errorMessage\r\n    else delete _errors[input.name]\r\n\r\n    const newErrors = checkConfirmPassword(input, _errors, data.password)\r\n\r\n    const _data = { ...data }\r\n    _data[input.name] = input.value\r\n\r\n    setData(_data)\r\n    setErrors(newErrors)\r\n  }\r\n\r\n  const checkConfirmPassword = (input, errors, password) => {\r\n    const newErrors = { ...errors }\r\n    if (input.name === 'confirmPassword') {\r\n      if (input.value === password) {\r\n        delete newErrors[input.name]\r\n      }\r\n    }\r\n    return newErrors\r\n  }\r\n\r\n  const renderInput = (name, label, type = 'text', rest) => {\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={handleChange}\r\n        error={errors[name]}\r\n        {...rest}\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderSelect = (name, label, value, onChange, options, rest) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <Select\r\n          {...rest}\r\n          isSearchable\r\n          isClearable\r\n          value={value}\r\n          onChange={onChange}\r\n          options={options}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderButton = label => {\r\n    return (\r\n      <button\r\n        disabled={validate() || Object.keys(errors).length > 0}\r\n        className=\"btn btn-primary mt-3\"\r\n      >\r\n        {label}\r\n      </button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e, props.onSubmit)}>\r\n      {props.children({\r\n        renderButton,\r\n        renderInput,\r\n        renderTextArea,\r\n        renderDatePicker,\r\n        renderSelect\r\n      })}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { memo, useEffect, useState, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Joi from 'joi-browser'\r\nimport Spinner from './../partials/spinner'\r\nimport useAnime from '../../hooks/useAnime'\r\nimport auth from '../../services/authService'\r\nimport Form from '../partials/form'\r\n\r\nimport { AnimeContext } from './../../context'\r\nimport { formatDate, mapToSelect } from '../../services/utilsService'\r\nimport { SET_REFRESH } from './../../hooks/types'\r\nimport { toast } from 'react-toastify'\r\nimport { getAnime, putAnime, postAnime } from './../../services/animeService'\r\n\r\nconst AnimeForm = props => {\r\n  const context = useContext(AnimeContext)\r\n  const id = props.match.params.id\r\n\r\n  const {\r\n    state: { genres, studios, seasons, types }\r\n  } = useAnime()\r\n\r\n  const [anime, setAnime] = useState({\r\n    id: 0,\r\n    title: '',\r\n    description: '',\r\n    season: null,\r\n    type: null,\r\n    genres: [],\r\n    studios: [],\r\n    releaseDate: ''\r\n  })\r\n\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const [selectedGenres, setSelectedGenres] = useState([])\r\n  const [selectedStudios, setSelectedStudios] = useState([])\r\n  const [selectedSeason, setSelectedSeason] = useState(null)\r\n  const [selectedType, setSelectedType] = useState(null)\r\n\r\n  const schema = {\r\n    id: Joi.number().integer(),\r\n    title: Joi.string()\r\n      .min(3)\r\n      .required()\r\n      .label('Title'),\r\n    description: Joi.optional(),\r\n    season: Joi.optional(),\r\n    type: Joi.optional(),\r\n    releaseDate: Joi.optional(),\r\n    imageUrl: Joi.optional(),\r\n    genres: Joi.array().optional(),\r\n    studios: Joi.array().optional()\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadAnime()\r\n  }, [])\r\n\r\n  const loadAnime = async () => {\r\n    try {\r\n      if (id === 'new') return\r\n\r\n      let { anime } = await getAnime(id)\r\n\r\n      const {\r\n        selectedGenres,\r\n        selectedStudios,\r\n        selectedSeason,\r\n        selectedType\r\n      } = mapToData(anime)\r\n\r\n      anime.releaseDate = formatDate(anime.releaseDate)\r\n\r\n      setAnime(anime)\r\n      setSelectedGenres(selectedGenres)\r\n      setSelectedStudios(selectedStudios)\r\n      setSelectedSeason(selectedSeason)\r\n      setSelectedType(selectedType)\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 404)\r\n        props.history.replace('/not-found')\r\n    }\r\n  }\r\n\r\n  const mapToData = anime => {\r\n    const selectedGenres = anime.genres.map(g => {\r\n      return mapToSelect(g)\r\n    })\r\n    const selectedStudios = anime.studios.map(s => {\r\n      return mapToSelect(s)\r\n    })\r\n    const selectedSeason = mapToSelect({ id: null, name: anime.season })\r\n    const selectedType = mapToSelect({ id: null, name: anime.type })\r\n    return { selectedGenres, selectedStudios, selectedSeason, selectedType }\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    if (!auth.isAdmin()) {\r\n      toast.error('Unauthorized user')\r\n      return\r\n    }\r\n\r\n    const _anime = { ...anime }\r\n\r\n    _anime.genreIds = selectedGenres.map(g => g.id) || []\r\n    _anime.studioIds = selectedStudios.map(s => s.id) || []\r\n    _anime.season = selectedSeason ? selectedSeason.value : ''\r\n    _anime.type = selectedType ? selectedType.value : ''\r\n\r\n    if (_anime.releaseDate) {\r\n      _anime.releaseDate = new Date(_anime.releaseDate).toISOString()\r\n    } else {\r\n      delete _anime.releaseDate\r\n    }\r\n\r\n    _anime.id ? await putAnime(_anime.id, _anime) : await postAnime(_anime)\r\n\r\n    _anime.id ? toast.success('Updated') : toast.success('Added')\r\n\r\n    props.history.push('/')\r\n\r\n    context.dispatch({ type: SET_REFRESH, payload: new Date() })\r\n  }\r\n\r\n  const handleChangeGenres = selectedGenres => setSelectedGenres(selectedGenres)\r\n\r\n  const handleChangeSeason = selectedSeason => setSelectedSeason(selectedSeason)\r\n\r\n  const handleChangeType = selectedType => setSelectedType(selectedType)\r\n\r\n  const handleChangeStudios = selectedStudios =>\r\n    setSelectedStudios(selectedStudios)\r\n\r\n  const handleDateChange = date => {\r\n    const _anime = { ...anime }\r\n\r\n    _anime.releaseDate = formatDate(date)\r\n\r\n    setAnime(_anime)\r\n  }\r\n\r\n  return (\r\n    <Spinner isLoaded={studios.length > 0 || id === 'new'}>\r\n      <div className=\"col-8 offset-2\">\r\n        <h1>{id !== 'new' ? 'Edit Form' : 'Add Form'}</h1>\r\n\r\n        <span className=\" d-flex justify-content-end\">\r\n          <Link to=\"/\">\r\n            <button className=\"btn fa fa-arrow-left btn-secondary btn-lg \" />\r\n          </Link>\r\n        </span>\r\n        <Form\r\n          data={{ data: anime, setData: setAnime }}\r\n          errors={{ errors, setErrors }}\r\n          onSubmit={handleSubmit}\r\n          schema={schema}\r\n        >\r\n          {({\r\n            renderButton,\r\n            renderInput,\r\n            renderSelect,\r\n            renderTextArea,\r\n            renderDatePicker\r\n          }) => {\r\n            return (\r\n              <React.Fragment>\r\n                {renderInput('title', 'Title')}\r\n\r\n                {renderTextArea('description', 'Description')}\r\n\r\n                {renderSelect(\r\n                  'type',\r\n                  'Type',\r\n                  selectedType,\r\n                  handleChangeType,\r\n                  types\r\n                )}\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    {renderSelect(\r\n                      'season',\r\n                      'Season',\r\n                      selectedSeason,\r\n                      handleChangeSeason,\r\n                      seasons\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    {renderDatePicker('releaseDate', 'Release', {\r\n                      onChange: handleDateChange\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    {renderSelect(\r\n                      'genreIds',\r\n                      'Genres',\r\n                      selectedGenres,\r\n                      handleChangeGenres,\r\n                      genres,\r\n                      { isMulti: true }\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    {renderSelect(\r\n                      'studioIds',\r\n                      'Studios',\r\n                      selectedStudios,\r\n                      handleChangeStudios,\r\n                      studios,\r\n                      { isMulti: true }\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {renderInput('imageUrl', 'Image Url')}\r\n\r\n                {renderButton(id !== 'new' ? 'Update' : 'Save')}\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Form>\r\n      </div>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default memo(AnimeForm)\r\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport auth from './../../services/authService'\r\nimport { capitalize } from '../../services/utilsService'\r\nimport { toast } from 'react-toastify'\r\nimport Form from '../partials/form'\r\n\r\nconst LoginForm = props => {\r\n  const [user, setUser] = useState({ username: '', password: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label('Username'),\r\n    password: Joi.string()\r\n      .required()\r\n      .label('Password')\r\n  }\r\n\r\n  const handleSubmit = async (e, data) => {\r\n    try {\r\n      await auth.login(data)\r\n      toast.success(`Welcome, ${capitalize(data.username)}`)\r\n      props.history.replace('/home')\r\n    } catch ({ response }) {\r\n      if (response && response.status === 401) {\r\n        toast.error(response.data.status.errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-6 offset-3 mt-5\">\r\n      <h1>Login</h1>\r\n      <Form\r\n        data={{ data: user, setData: setUser }}\r\n        errors={{ errors, setErrors }}\r\n        onSubmit={handleSubmit}\r\n        schema={schema}\r\n      >\r\n        {({ renderButton, renderInput }) => {\r\n          return (\r\n            <React.Fragment>\r\n              {renderInput('username', 'Username')}\r\n              {renderInput('password', 'Password', 'password')}\r\n              {renderButton('Login')}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport { capitalize } from './../../services/utilsService'\r\nimport auth from './../../services/authService'\r\nimport { toast } from 'react-toastify'\r\nimport Form from '../partials/form'\r\n\r\nconst RegisterForm = props => {\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n    confirmPassword: ''\r\n  })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Username'),\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label('Email'),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Password'),\r\n    confirmPassword: Joi.string()\r\n      .required()\r\n      .valid(Joi.ref('password'))\r\n      .options({ language: { any: { allowOnly: 'not match' } } })\r\n      .label('Password')\r\n  }\r\n\r\n  const handleCheckUser = async ({ currentTarget: input }) => {\r\n    const { isTaken } =\r\n      input.name === 'username'\r\n        ? await auth.isUsernameTaken(input.value)\r\n        : await auth.isEmailTaken(input.value)\r\n\r\n    const _errors = { ...errors }\r\n\r\n    if (isTaken) {\r\n      _errors[input.name] = `\"${capitalize(input.name)}\" is taken`\r\n    } else {\r\n      delete _errors[input.name]\r\n    }\r\n\r\n    setErrors(_errors)\r\n\r\n    return _errors\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    const _errors = await handleCheckUser(e)\r\n\r\n    if (Object.keys(_errors).length > 0) return\r\n\r\n    const _user = { ...user }\r\n\r\n    try {\r\n      await auth.register(_user)\r\n\r\n      toast.success('Welcome, ' + capitalize(user.username))\r\n\r\n      setUser({\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        confirmPassword: ''\r\n      })\r\n      setErrors(_errors)\r\n      props.history.replace('/')\r\n    } catch ({ response }) {\r\n      if (response && response.status === 400) {\r\n        toast.error(response.data.status.errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-6 offset-3 mt-5\">\r\n      <h1>Register</h1>\r\n      <Form\r\n        data={{ data: user, setData: setUser }}\r\n        errors={{ errors, setErrors }}\r\n        onSubmit={handleSubmit}\r\n        schema={schema}\r\n      >\r\n        {({ renderButton, renderInput }) => {\r\n          return (\r\n            <React.Fragment>\r\n              {renderInput('username', 'Username', 'text', {\r\n                onBlur: handleCheckUser\r\n              })}\r\n              {renderInput('email', 'Email', 'email', {\r\n                onBlur: handleCheckUser\r\n              })}\r\n              {renderInput('password', 'Password', 'password')}\r\n              {renderInput('confirmPassword', 'Confirm Password', 'password')}\r\n              {renderButton('Register')}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport auth from '../../services/authService'\n\nconst AuthRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!auth.isValidUser())\n          return (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: props.location }\n              }}\n            />\n          )\n        return Component ? <Component {...props} /> : render(props)\n      }}\n    />\n  )\n}\n\nexport default AuthRoute\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport auth from '../../services/authService'\r\n\r\nconst GuestRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (auth.isValidUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/',\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        return Component ? <Component {...props} /> : render(props)\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default GuestRoute\r\n","import { useEffect, useReducer } from 'react'\r\nimport { SET_ITEMS } from './types'\r\n\r\nconst useRequest = (request, items) => {\r\n  const reducer = (state, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n      case SET_ITEMS:\r\n        return { ...state, [items]: payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  const initialState = {\r\n    [items]: []\r\n  }\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    request().then(response => {\r\n      dispatch({ type: SET_ITEMS, payload: response[items] })\r\n    })\r\n  }, [])\r\n\r\n  return { state, dispatch }\r\n}\r\n\r\nexport default useRequest\r\n","import React, { useState } from 'react'\r\nimport useRequest from './../../hooks/useRequest'\r\nimport { getGenres } from './../../services/animeService'\r\nimport { sortBy } from './../../services/utilsService'\r\nimport { Link } from 'react-router-dom'\r\nimport Table from './../partials/table'\r\nimport { SET_ITEMS } from './../../hooks/types'\r\nimport HeaderTitle from '../partials/headerTitle'\r\nimport Form from '../partials/form'\r\n\r\nconst GenresTable = () => {\r\n  const {\r\n    state: { genres },\r\n    dispatch\r\n  } = useRequest(getGenres, 'genres')\r\n\r\n  const [sortColumn, setSortColumn] = useState({ path: 'name', order: 'asc' })\r\n\r\n  const columns = [\r\n    {\r\n      path: 'name',\r\n      label: 'Name',\r\n      content: genre => <Link to={`/genres/${genre.id}`}>{genre.name}</Link>\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: genre => (\r\n        <div className=\"d-flex\">\r\n          <Link to={`/genres/${genre.id}`}>\r\n            <button className=\"btn btn-warning btn-sm mr-1 fa fa-pencil text-white\" />\r\n          </Link>\r\n          <button className=\"btn btn-danger btn-sm fa fa-trash text-white\" />\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const handleSort = sortColumn => {\r\n    dispatch({ type: SET_ITEMS, payload: sortBy(genres, sortColumn) })\r\n    setSortColumn(sortColumn)\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-6 offset-3 \">\r\n      <HeaderTitle total={genres.length} title={'Genres'} />\r\n      <Table\r\n        columns={columns}\r\n        data={genres}\r\n        sortColumn={sortColumn}\r\n        onSort={handleSort}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenresTable\r\n","import React, { Component } from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n\r\nimport Home from './components/home'\r\nimport NotFound from './components/partials/notFound'\r\nimport AnimeForm from './components/animes/animeForm'\r\nimport LoginForm from './components/auth/loginForm'\r\nimport RegisterForm from './components/auth/registerForm'\r\nimport AuthRoute from './components/partials/authRoute'\r\nimport GuestRoute from './components/partials/guestRoute'\r\nimport GenresTable from './components/genres/genresTable'\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <AuthRoute path=\"/home\" component={Home} />\r\n      <GuestRoute path=\"/login\" component={LoginForm} />\r\n      <GuestRoute path=\"/register\" component={RegisterForm} />\r\n      <AuthRoute path=\"/animes/:id\" component={AnimeForm} />\r\n      <AuthRoute path=\"/genres/\" component={GenresTable} />\r\n      <Route path=\"/not-found\" component={NotFound} />>\r\n      <Redirect from=\"/\" exact to=\"/home\" />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React, { Component } from 'react'\nimport { ToastContainer } from 'react-toastify'\nimport AnimeProvider from './providers/animeProvider'\nimport Nav from './components/partials/nav'\nimport Routes from './routes'\n\nimport './App.css'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <AnimeProvider>\n        <Nav />\n        <ToastContainer autoClose={3000} />\n        <main className=\"container\">\n          <Routes />\n        </main>\n      </AnimeProvider>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'font-awesome/css/font-awesome.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\nserviceWorker.unregister()\n"],"sourceRoot":""}