{"version":3,"sources":["hooks/usePagination.js","hooks/types.js","context.js","services/utilsService.js","services/httpService.js","services/authService.js","services/animeService.js","providers/animeProvider.jsx","components/hoc/withAuth.jsx","components/partials/nav.jsx","components/partials/tableHeader.jsx","components/partials/tableBody.jsx","components/partials/table.jsx","components/animes/paginate.jsx","components/animes/searchForm.jsx","components/partials/loader.jsx","components/animes/animesTable.jsx","components/partials/headerTitle.jsx","components/home.jsx","components/partials/notFound.jsx","hooks/useAnime.js","components/partials/input.jsx","components/partials/form.jsx","components/partials/backButton.jsx","components/animes/animeForm.jsx","components/auth/loginForm.jsx","components/auth/registerForm.jsx","components/partials/authRoute.jsx","components/partials/guestRoute.jsx","hooks/useRequest.js","components/genres/genresTable.jsx","services/genreService.js","components/genres/genreForm.jsx","services/studioService.js","components/studious/studioForm.jsx","routes.jsx","App.js","index.js"],"names":["reducer","state","action","payload","type","Object","objectSpread","pageNum","items","pages","total","toggle","title","usePagination","_ref","request","_ref$data","data","_ref$pages","_ref$total","_ref$take","take","initialState","_useReducer","useReducer","_useReducer2","slicedToArray","_useReducer2$","rest","objectWithoutProperties","dispatch","useEffect","then","response","catch","_ref2","status","toast","error","AnimeContext","React","createContext","sortBy","sortColumn","_","orderBy","path","order","formatDate","date","Date","toLocaleDateString","mapToSelect","id","name","label","capitalize","value","str","startCase","axios","interceptors","use","Promise","reject","throwError","config","baseURL","process","API_URL","apiURL","httpService","get","post","put","delete","setJwt","token","headers","Authorization","concat","saveJwt","refreshToken","localStorage","setItem","_callee","user","regenerator_default","a","wrap","_context","prev","next","http","jwt","abrupt","sent","stop","this","_callee2","_context2","_callee3","_context3","removeTokens","removeItem","getDecodeToken","getItem","jwtDecode","ex","authService","login","register","logout","getCurrentUser","isUsernameTaken","username","isEmailTaken","email","isValidUser","isAdmin","getPagedAnimes","num","limit","arguments","length","undefined","getGenres","getAnime","getSeasons","getTypes","postAnime","anime","auth","putAnime","memo","props","_usePagination","pagination","perPage","_usePagination$state","animes","handleDelete","asyncToGenerator","mark","originalAnimes","_animes","toConsumableArray","filter","t0","_x","apply","react_default","createElement","Provider","onDelete","onRefresh","onPageChange","onSort","onSearch","children","withAuth","Component","assign","handleLogout","Fragment","className","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","href","onClick","jsx","TableHeader","columns","map","column","i","key","raiseSort","renderSortIcon","TableBody","item","content","renderCell","Table","tableHeader","tableBody","Paginate","start","end","setStart","setEnd","PAGE_NUMBERS","pageNumbers","_useContext","useContext","_useContext$state","handlePageChange","_pageNum","isNavHidden","isFirstDisabled","isLastDisabled","arr","push","createArray","doNext","SearchForm","_useState","useState","_useState2","setTitle","handleSubmit","e","preventDefault","onSubmit","onChange","target","placeholder","Loader","isLoaded","role","_useState3","_useState4","_useState5","_useState6","setSortColumn","renderItemsName","genres","studios","doDelete","_ref3","paginateProps","style","padding","searchForm","loader","table","c","releaseDate","paginate","HeaderTitle","headerTitle","animesTable","NotFound","useAnime","seasons","types","g","Input","htmlFor","Form","isDisable","setIsDisable","setData","errors","setErrors","schema","validate","Joi","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","details","Symbol","iterator","done","message","err","return","handleChange","_ref4","input","currentTarget","_errors","errorMessage","obj","defineProperty","_schema","validateProperty","newErrors","checkConfirmPassword","password","_data","doSubmit","renderButton","icon","disabled","keys","renderInput","partials_input","renderTextArea","row","rows","renderDatePicker","es","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","placeholderText","renderSelect","options","react_select_esm","isSearchable","isClearable","BackButton","history","goBack","context","match","params","_useAnime$state","description","season","setAnime","selectedGenres","setSelectedGenres","_useState7","_useState8","selectedStudios","setSelectedStudios","_useState9","_useState10","selectedSeason","setSelectedSeason","_useState11","_useState12","selectedType","setSelectedType","number","integer","string","min","required","optional","imageUrl","array","loadAnime","_anime","_mapToData","_selectedGenres","_selectedStudios","_selectedSeason","_selectedType","mapToData","replace","s","genreIds","studioIds","toISOString","success","handleChangeGenres","handleChangeSeason","handleChangeType","handleChangeStudios","handleDateChange","renderAdd","backButton","partials_form","_ref5","isMulti","setUser","_x2","confirmPassword","valid","ref","language","any","allowOnly","handleCheckUser","isTaken","_user","_ref7","onBlur","_ref$isAdmin","component","render","Route","Redirect","pathname","from","location","useRequest","GenresTable","_useRequest","genre","postGenre","GenreForm","setGenre","handleBack","code","postStudio","studio","setStudio","Routes","Switch","authRoute","Home","guestRoute","LoginForm","RegisterForm","AnimeForm","StudioForm","exact","App","animeProvider","nav","lib","autoClose","routes","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6fea7bc3.chunk.js","sourcesContent":["import { useEffect, useReducer } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n  SET_ITEMS,\r\n  SET_PAGENUM,\r\n  SET_PAGES,\r\n  SET_TOTAL,\r\n  SET_REFRESH,\r\n  SEARCH_ITEMS\r\n} from './types'\r\n\r\nconst reducer = (state, action) => {\r\n  const { payload, type } = action\r\n  switch (type) {\r\n    case SET_PAGENUM:\r\n      return { ...state, pageNum: payload }\r\n    case SET_ITEMS:\r\n      return { ...state, items: payload }\r\n    case SET_PAGES:\r\n      return { ...state, pages: payload }\r\n    case SET_TOTAL:\r\n      return { ...state, total: payload }\r\n    case SET_REFRESH:\r\n      return { ...state, toggle: payload }\r\n    case SEARCH_ITEMS:\r\n      return { ...state, title: payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// customize the properties of response data in the usePagination arguments\r\n//\r\n//\r\n// consume usePagination e.g.\r\n// const { state: { items: movies, pageNum, pages, total }, dispatch}\r\n// = usePagination({ request: getMovies, take: 10, total: 'count', pages: 'pagesCount', data: 'movies' })\r\n\r\nconst usePagination = ({\r\n  request,\r\n  data = 'data',\r\n  pages = 'lastPage',\r\n  total = 'total',\r\n  take = 15\r\n}) => {\r\n  const initialState = {\r\n    items: [],\r\n    pageNum: 1,\r\n    pages: 0,\r\n    total: 0,\r\n    take,\r\n    toggle: false\r\n  }\r\n  const [{ toggle, title, pageNum, ...rest }, dispatch] = useReducer(\r\n    reducer,\r\n    initialState\r\n  )\r\n\r\n  useEffect(() => {\r\n    request(pageNum, take, title)\r\n      .then(response => {\r\n        dispatch({ type: SET_ITEMS, payload: response[data] })\r\n        dispatch({ type: SET_PAGES, payload: response[pages] })\r\n        dispatch({ type: SET_TOTAL, payload: response[total] })\r\n      })\r\n      .catch(({ response }) => {\r\n        if (response && response.status === 404) {\r\n          dispatch({ type: SET_ITEMS, payload: [] })\r\n          dispatch({ type: SET_PAGES, payload: 0 })\r\n          dispatch({ type: SET_TOTAL, payload: 0 })\r\n          dispatch({ type: SET_PAGENUM, payload: 1 })\r\n          toast.error('No result/s found')\r\n        }\r\n      })\r\n  }, [toggle, title, pageNum])\r\n\r\n  return {\r\n    state: { toggle, pageNum, take, ...rest },\r\n    dispatch\r\n  }\r\n}\r\n\r\nexport default usePagination\r\n","export const SET_ITEMS = 'SET_ITEMS' // array\r\nexport const SET_PAGENUM = 'SET_PAGENUM' // number, active page\r\nexport const SET_PAGES = 'SET_PAGES' // number, total no. of pages\r\nexport const SET_TOTAL = 'SET_TOTAL' // number, total no. of items\r\nexport const SET_REFRESH = 'SET_REFRESH' // boolean, do reload page\r\nexport const SEARCH_ITEMS = 'SEARCH_ITEMS'\r\nexport const DELETE_ITEM = 'DELETE_ITEM'\r\n","import React from 'react'\r\n\r\nexport const AnimeContext = React.createContext({})\r\n","import _ from 'lodash'\r\n\r\nexport function sortBy(items, sortColumn) {\r\n  return _.orderBy(items, [sortColumn.path], [sortColumn.order])\r\n}\r\n\r\nexport function toElipse(str, end = 20) {\r\n  const x = str.substring(0, end)\r\n  const hasElipse = str.length > end ? '...' : ''\r\n  return `${x} ${hasElipse}`\r\n}\r\n\r\nexport const formatDate = date => {\r\n  return date ? new Date(date).toLocaleDateString() : null\r\n}\r\n\r\nexport const createArray = (start, end) => {\r\n  let arr = []\r\n  for (let i = start; i <= end; i++) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n\r\nexport const mapToSelect = ({ id, name }) => {\r\n  return { id, label: capitalize(name), value: name }\r\n}\r\n\r\nexport const capitalize = str => _.startCase(str)\r\n","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { appUrl as apiURL } from '../config.json'\r\n\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    return throwError(error)\r\n  }\r\n)\r\n\r\naxios.interceptors.request.use(config => {\r\n  config.baseURL = process.env.API_URL || apiURL\r\n  return config\r\n})\r\n\r\nfunction setJwt({ token }) {\r\n  axios.interceptors.request.use(config => {\r\n    config.headers.Authorization = `Bearer ${token}`\r\n\r\n    return config\r\n  })\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  axios,\r\n  setJwt\r\n}\r\n\r\nfunction throwError(error) {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500\r\n  if (!expectedError) {\r\n    toast.error('An unexpected error occurrred.')\r\n    return\r\n  }\r\n\r\n  if (\r\n    error.response &&\r\n    error.response.data.status &&\r\n    error.response.data.status.name === 'ExpiredJwtToken'\r\n  ) {\r\n    toast.error('jwt is expired')\r\n    return Promise.reject(error)\r\n  }\r\n\r\n  return Promise.reject(error)\r\n\r\n  // if (error.response && error.response.data.status.name === 'ExpiredJwtToken') {\r\n  //   if (!isRefreshing) {\r\n  //     isRefreshing = true\r\n  //     axios.interceptors.request.use(config => {\r\n  //       config.headers.Authorization = `Bearer ${localStorage.getItem(\r\n  //         'access-token'\r\n  //       )}`\r\n\r\n  //       return config\r\n  //     })\r\n  //     axios\r\n  //       .post('/token/refresh', {\r\n  //         refreshToken: localStorage.getItem('refresh-token')\r\n  //       })\r\n  //       .then((data,x) => {\r\n  //         console.log(data,x)\r\n  //         // saveJwt(data.data.jwt)\r\n  //         isRefreshing = false\r\n  //       })\r\n  //   }\r\n  //   return config\r\n  // }\r\n}\r\n","import http from './httpService'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nfunction saveJwt({ token, refreshToken }) {\r\n  localStorage.setItem('access-token', token)\r\n  localStorage.setItem('refresh-token', refreshToken)\r\n}\r\n\r\nasync function login(user) {\r\n  return await http.post('/auth/login', user).then(data => {\r\n    saveJwt(data.data.jwt)\r\n  })\r\n}\r\n\r\nasync function register(user) {\r\n  const { jwt } = await http\r\n    .post('/auth/register', user)\r\n    .then(data => data.data)\r\n\r\n  if (!jwt) return false\r\n\r\n  saveJwt(jwt)\r\n  return true\r\n}\r\n\r\nasync function logout() {\r\n  http.setJwt(jwt())\r\n  removeTokens()\r\n  await http.post('/token/revoke', { refreshToken: jwt().refreshToken })\r\n}\r\n\r\nfunction removeTokens() {\r\n  localStorage.removeItem('refresh-token')\r\n  localStorage.removeItem('access-token')\r\n}\r\n\r\nfunction getDecodeToken() {\r\n  try {\r\n    const token = localStorage.getItem('access-token')\r\n    return { ...jwtDecode(token) }\r\n  } catch (ex) {\r\n    return null\r\n  }\r\n}\r\n\r\nconst getCurrentUser = () =>\r\n  getDecodeToken() ? { ...getDecodeToken().data } : null\r\n\r\nconst isValidUser = () => (getDecodeToken() ? true : false)\r\n\r\nconst isAdmin = () => (getDecodeToken() ? getDecodeToken().data.isAdmin : null)\r\n\r\nfunction isUsernameTaken(username) {\r\n  return http.get('/auth/is-taken?username=' + username).then(data => data.data)\r\n}\r\n\r\nfunction isEmailTaken(email) {\r\n  return http.get('/auth/is-taken?email=' + email).then(data => data.data)\r\n}\r\n\r\nconst jwt = () => {\r\n  return {\r\n    token: localStorage.getItem('access-token'),\r\n    refreshToken: localStorage.getItem('refresh-token')\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  register,\r\n  logout,\r\n  getCurrentUser,\r\n  isUsernameTaken,\r\n  isEmailTaken,\r\n  jwt,\r\n  isValidUser,\r\n  isAdmin\r\n}\r\n","import http from './httpService'\r\nimport auth from './authService'\r\n\r\nexport function getAnimes() {\r\n  return http.get('/api/animes').then(data => data.data)\r\n}\r\n\r\nexport function getPagedAnimes(num, limit, title = '') {\r\n\r\n  return http\r\n    .get(`/api/animes/page/${num}?limit=${limit}&title=${title}`)\r\n    .then(data => data.data.data)\r\n}\r\n\r\nexport function getGenres() {\r\n  return http.get('/api/genres').then(data => data.data)\r\n}\r\n\r\nexport function getStudios() {\r\n  return http.get('/api/studios').then(data => data.data)\r\n}\r\n\r\nexport function getAnime(id) {\r\n  return http.get(`/api/animes/${id}`).then(data => data.data)\r\n}\r\n\r\nexport const getSeasons = [\r\n  { label: 'Winter', value: 'winter' },\r\n  { label: 'Spring', value: 'spring' },\r\n  { label: 'Summer', value: 'summer' },\r\n  { label: 'Fall', value: 'fall' }\r\n]\r\n\r\nexport const getTypes = [\r\n  { label: 'TV', value: 'tv' },\r\n  { label: 'Movie', value: 'movie' },\r\n  { label: 'OVA', value: 'ova' },\r\n  { label: 'ONA', value: 'ona' },\r\n  { label: 'Other', value: 'other' }\r\n]\r\n\r\nexport function postAnime(anime) {\r\n  http.setJwt(auth.jwt())\r\n  return http.post('/api/animes', anime).then(data => data.data)\r\n}\r\n\r\nexport function putAnime(id, anime) {\r\n  http.setJwt(auth.jwt())\r\n  return http.put('/api/animes/' + id, anime).then(data => data.data)\r\n}\r\n\r\nexport function deleteAnime(id) {\r\n  http.setJwt(auth.jwt())\r\n  return http.delete('/api/animes/' + id).then(data => data.data)\r\n}\r\n","import React, { memo } from 'react'\r\nimport usePagination from '../hooks/usePagination'\r\nimport { AnimeContext } from '../context'\r\nimport { pagination } from '../config.json'\r\nimport { sortBy } from '../services/utilsService'\r\nimport { getPagedAnimes, deleteAnime } from '../services/animeService'\r\nimport {\r\n  SET_REFRESH,\r\n  SET_ITEMS,\r\n  SET_PAGENUM,\r\n  SEARCH_ITEMS\r\n} from './../hooks/types'\r\n\r\nconst AnimeProvider = props => {\r\n  const {\r\n    state: { pageNum, items: animes, pages, total },\r\n    dispatch\r\n  } = usePagination({ request: getPagedAnimes, take: pagination.perPage })\r\n\r\n  const handleRefresh = () => {\r\n    dispatch({ type: SET_REFRESH, payload: toggle => !toggle })\r\n  }\r\n\r\n  const handlePageChange = pageNum => {\r\n    dispatch({ type: SET_PAGENUM, payload: pageNum })\r\n  }\r\n\r\n  const handleDelete = async anime => {\r\n    let originalAnimes = [...animes]\r\n\r\n    try {\r\n      const _animes = originalAnimes.filter(a => a.id !== anime.id)\r\n\r\n      dispatch({ type: SET_ITEMS, payload: _animes })\r\n\r\n      await deleteAnime(anime.id)\r\n      return _animes.length > 0\r\n    } catch (error) {\r\n      dispatch({ type: SET_ITEMS, payload: originalAnimes })\r\n      return originalAnimes.length > 0\r\n    }\r\n  }\r\n\r\n  const handleSort = sortColumn => {\r\n    dispatch({ type: SET_ITEMS, payload: sortBy(animes, sortColumn) })\r\n  }\r\n\r\n  const handleSearch = title => {\r\n    dispatch({ type: SEARCH_ITEMS, payload: title })\r\n  }\r\n\r\n  return (\r\n    <AnimeContext.Provider\r\n      value={{\r\n        state: { animes, pages, pageNum, total },\r\n        onDelete: handleDelete,\r\n        onRefresh: handleRefresh,\r\n        onPageChange: handlePageChange,\r\n        onSort: handleSort,\r\n        onSearch: handleSearch\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AnimeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default memo(AnimeProvider)\r\n","import React from 'react'\r\nimport auth from '../../services/authService'\r\n\r\nconst withAuth = Component => {\r\n  return props => {\r\n    return <Component auth={auth} {...props} />\r\n  }\r\n}\r\n\r\nexport default withAuth\r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { capitalize } from '../../services/utilsService'\r\nimport withAuth from '../hoc/withAuth'\r\n\r\nconst Nav = ({ auth, ...props }) => {\r\n  const handleLogout = async () => {\r\n    await auth.logout()\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            KITCHANIME\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div\r\n            className=\"collapse navbar-collapse d-flex justify-content-end\"\r\n            id=\"navbarNav\"\r\n          >\r\n            <ul className=\"navbar-nav\">\r\n              {auth.isValidUser() && (\r\n                <React.Fragment>\r\n                  <i className=\"fa fa-user  text-warning\" />\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link active\" to=\"/home\">\r\n                      {capitalize(auth.getCurrentUser().username)}\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      className=\"nav-link\"\r\n                      href=\"/login\"\r\n                      onClick={handleLogout}\r\n                    >\r\n                      Logout\r\n                    </a>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n\r\n              {!auth.isValidUser() && (\r\n                <React.Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/login\">\r\n                      Login\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/register\">\r\n                      Register\r\n                    </NavLink>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <style jsx=\"\">{`\r\n          .navbar {\r\n            margin-bottom: 20px;\r\n          }\r\n          .fa-user {\r\n            margin-top: 12px !important;\r\n          }import withAuth from './../auth/registerForm';\r\n\r\n        `}</style>\r\n      </nav>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(Nav)\r\n","import React from 'react'\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nconst TableHeader = props => {\n  const raiseSort = path => {\n    const sortColumn = { ...props.sortColumn }\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc'\n    else {\n      sortColumn.path = path\n      sortColumn.order = 'asc'\n    }\n    props.onSort(sortColumn)\n  }\n\n  const renderSortIcon = column => {\n    const { sortColumn } = props\n\n    if (!column.path) return null\n\n    if (column.path !== sortColumn.path) return null\n\n    if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\" />\n    return <i className=\"fa fa-sort-desc\" />\n  }\n\n  return (\n    <thead className=\"thead-dark\">\n      <tr>\n        {props.columns.map((column, i) => (\n          <th\n            className=\"clickable\"\n            key={i}\n            onClick={() => raiseSort(column.path)}\n          >\n            {column.label} {renderSortIcon(column)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\n\nexport default TableHeader\n","import React from 'react'\nimport _ from 'lodash'\n\nconst TableBody = ({ data, columns }) => {\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item)\n\n    return _.get(item, column.path)\n  }\n\n  return (\n    <tbody>\n      {data.map(item => (\n        <tr key={item.id}>\n          {columns.map((column, i) => (\n            <td key={i}>{renderCell(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  )\n}\n\nexport default TableBody\n","import React from 'react'\nimport TableHeader from './tableHeader'\nimport TableBody from './tableBody'\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table table-bordered table-hover \">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  )\n}\n\nexport default Table\n","import React, { useContext, useEffect } from 'react'\r\nimport { AnimeContext } from '../../context'\r\nimport { createArray } from '../../services/utilsService'\r\nimport { pagination } from '../../config.json'\r\n\r\nconst Paginate = ({ start, end, setStart, setEnd }) => {\r\n  const { pageNumbers: PAGE_NUMBERS } = pagination\r\n\r\n  const {\r\n    state: { pageNum, pages },\r\n    onPageChange\r\n  } = useContext(AnimeContext)\r\n\r\n  const doNext = pageNum => {\r\n    handlePageChange(pageNum + 1)\r\n    if (end === pages) return\r\n    setStart(start + 1)\r\n    setEnd(end + 1)\r\n  }\r\n\r\n  //reset start end when delete is 0 in paged\r\n  useEffect(() => {\r\n    if (end > pages && start !== 1) {\r\n      setStart(start - 1)\r\n      setEnd(end - 1)\r\n    }\r\n  }, [pageNum])\r\n\r\n  const handlePageChange = _pageNum => {\r\n    if (pageNum === _pageNum) return\r\n    onPageChange(_pageNum)\r\n  }\r\n\r\n  const doPrev = _pageNum => {\r\n    handlePageChange(_pageNum - 1)\r\n\r\n    if (start === 1) return\r\n    setStart(start - 1)\r\n    setEnd(end - 1)\r\n  }\r\n\r\n  const renderPages = () => {\r\n    let _end = pages < PAGE_NUMBERS ? pages : end\r\n\r\n    return createArray(start, _end).map(_pageNum => (\r\n      <li\r\n        key={_pageNum}\r\n        className={pageNum === _pageNum ? 'page-item active' : 'page-item'}\r\n      >\r\n        <button\r\n          className=\"page-link\"\r\n          onClick={() => handlePageChange(_pageNum)}\r\n        >\r\n          {_pageNum}\r\n        </button>\r\n      </li>\r\n    ))\r\n  }\r\n\r\n  const isNavHidden = () => {\r\n    return pages > PAGE_NUMBERS\r\n  }\r\n\r\n  const isPagesHidden = () => {\r\n    return pages > 1\r\n  }\r\n\r\n  const isFirstDisabled = () => {\r\n    return pageNum === 1 ? 'disabled' : ''\r\n  }\r\n\r\n  const isLastDisabled = () => {\r\n    return pages === pageNum ? 'disabled' : ''\r\n  }\r\n\r\n  const prevPage = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <li className={`page-item ${isFirstDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={() => {\r\n              if (pageNum === 1) return\r\n              handlePageChange(1)\r\n              setStart(1)\r\n              setEnd(PAGE_NUMBERS)\r\n            }}\r\n          >\r\n            {'first'}\r\n          </button>\r\n        </li>\r\n\r\n        <li className={`page-item ${isFirstDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Previous\"\r\n            onClick={() => doPrev(pageNum)}\r\n          >\r\n            &laquo;\r\n          </button>\r\n        </li>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const nextPage = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <li className={`page-item ${isLastDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Next\"\r\n            onClick={() => doNext(pageNum)}\r\n          >\r\n            &raquo;\r\n          </button>\r\n        </li>\r\n\r\n        <li className={`page-item ${isLastDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={() => {\r\n              handlePageChange(pages)\r\n              setStart(pages - (PAGE_NUMBERS - 1))\r\n              setEnd(pages)\r\n            }}\r\n          >\r\n            {'last'}\r\n          </button>\r\n        </li>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const pageOf = () => {\r\n    return (\r\n      <div className=\"pages px-0 col d-flex justify-content-end\">\r\n        <p className=\"page-of\">{`${pageNum} of ${pages}`}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col d-flex justify-content-start px-0\">\r\n          <nav>\r\n            <ul className=\"pagination\">\r\n              {isNavHidden() && prevPage()}\r\n\r\n              {isPagesHidden() && renderPages()}\r\n\r\n              {isNavHidden() && nextPage()}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        {pageOf()}\r\n        <style jsx=\"\">\r\n          {`\r\n            .pages {\r\n              text-align: right;\r\n            }\r\n            .page-of {\r\n              margin-top: 10px;\r\n            }\r\n          `}\r\n        </style>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useContext, useState } from 'react'\r\nimport { AnimeContext } from '../../context'\r\nimport { pagination } from '../../config.json'\r\n\r\nconst SearchForm = props => {\r\n  const { onPageChange, onSearch } = useContext(AnimeContext)\r\n  const [title, setTitle] = useState('')\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault()\r\n    if (!title) return\r\n    props.setStart(1)\r\n    props.setEnd(pagination.pageNumbers)\r\n    onPageChange(1)\r\n    onSearch(title)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type={'text'}\r\n          name={title}\r\n          value={title}\r\n          onChange={e => setTitle(e.target.value)}\r\n          className=\"form-control\"\r\n          placeholder=\"Search title\"\r\n        />\r\n        <button className=\"btn-search btn btn-primary ml-2\">\r\n          <span className=\"fa fa-search mr-1\" />\r\n          SEARCH\r\n        </button>\r\n      </form>\r\n      <style jsx=\"\">{`\r\n        form {\r\n          display: flex;\r\n        }\r\n        .btn-search {\r\n          width: 13%;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\n\r\nconst Loader = ({ isLoaded, children }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {!isLoaded && (\r\n        <div className=\"spin d-flex justify-content-center justify-items-center\">\r\n          <div className=\"spinner spinner-grow\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isLoaded && children}\r\n      <style jsx=\"\">{`\r\n        .spin {\r\n          position: fixed;\r\n          z-index: 1031;\r\n          top: 40%;\r\n          left: 50%;\r\n          transform: translate(-50%, -50%);\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { pagination } from '../../config.json'\r\nimport { AnimeContext } from '../../context'\r\nimport Table from '../partials/table'\r\nimport { formatDate } from '../../services/utilsService'\r\nimport withAuth from '../hoc/withAuth'\r\nimport { toast } from 'react-toastify'\r\nimport Paginate from './paginate'\r\nimport SearchForm from './searchForm'\r\nimport Loader from './../partials/loader'\r\n\r\nconst Animes = ({ auth, ...props }) => {\r\n  const { pageNumbers: PAGE_NUMBERS } = pagination\r\n\r\n  const {\r\n    state: { animes, pageNum, total },\r\n    onDelete,\r\n    onRefresh,\r\n    onPageChange,\r\n    onSort,\r\n    onSearch\r\n  } = useContext(AnimeContext)\r\n\r\n  const [start, setStart] = useState(1)\r\n  const [end, setEnd] = useState(PAGE_NUMBERS)\r\n\r\n  const [sortColumn, setSortColumn] = useState({ path: 'name', order: 'asc' })\r\n\r\n  const columns = [\r\n    {\r\n      path: 'title',\r\n      label: 'Title',\r\n      content: anime => <Link to={`/animes/${anime.id}`}>{anime.title}</Link>\r\n    },\r\n    { path: 'season', label: 'Season' },\r\n    {\r\n      path: 'releaseDate',\r\n      label: 'Release'\r\n    },\r\n    {\r\n      path: 'type',\r\n      label: 'Type'\r\n    },\r\n    {\r\n      label: 'Genres',\r\n      content: anime => renderItemsName(anime.genres)\r\n    },\r\n    {\r\n      label: 'Studios',\r\n      content: anime => renderItemsName(anime.studios)\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: anime => (\r\n        <div className=\"\">\r\n          <Link to={`/animes/${anime.id}`}>\r\n            <button className=\"btn btn-warning btn-sm mr-1 text-white\">\r\n              <span className=\"fa fa-pencil mr-1\" />\r\n              EDIT\r\n            </button>\r\n          </Link>\r\n          <button\r\n            onClick={async () => await doDelete(anime)}\r\n            className=\"btn btn-danger btn-sm text-white\"\r\n          >\r\n            <span className=\"fa fa-trash mr-1\" />\r\n            DELETE\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const doDelete = async anime => {\r\n    if (!auth.isAdmin()) {\r\n      toast.error('Unauthorized user')\r\n      return\r\n    }\r\n\r\n    if (!(await onDelete(anime))) {\r\n      onPageChange(pageNum - 1)\r\n      if (start > 1) {\r\n        setStart(start - 1)\r\n      }\r\n      setEnd(end - 1)\r\n      return\r\n    }\r\n    onRefresh()\r\n  }\r\n\r\n  const renderItemsName = items => {\r\n    return items.map((item, i) => (\r\n      <span key={i} className=\"badge ml-1  badge-secondary\">\r\n        {item.name}\r\n      </span>\r\n    ))\r\n  }\r\n\r\n  const transformAnimes = () => {\r\n    return animes.map(anime => {\r\n      // not included to table anymore\r\n      // anime.description = toElipse(anime.description || '', 20)\r\n      // anime.imageUrl = toElipse(anime.imageUrl || '', 20)\r\n      anime.releaseDate = formatDate(anime.releaseDate)\r\n      return anime\r\n    })\r\n  }\r\n\r\n  const handleSort = sortColumn => {\r\n    onSort(sortColumn)\r\n    setSortColumn(sortColumn)\r\n  }\r\n\r\n  const withColumnActions = () => {\r\n    if (auth.isAdmin()) return columns\r\n\r\n    const _columns = [...columns]\r\n    return _columns.filter(c => c.key !== 'actions')\r\n  }\r\n\r\n  const paginateProps = {\r\n    start,\r\n    end,\r\n    setStart,\r\n    setEnd\r\n  }\r\n\r\n  const renderAddBtn = () => {\r\n    return (\r\n      auth.isAdmin() && (\r\n        <Link to=\"/animes/new\">\r\n          <button className=\"btn btn-success mr-2 mt-1\">\r\n            <span className=\"fa fa-plus mr-1\" />\r\n            NEW ANIME\r\n          </button>\r\n        </Link>\r\n      )\r\n    )\r\n  }\r\n  const renderRefreshBtn = () => {\r\n    return (\r\n      <div>\r\n        <Link to=\"/\">\r\n          <button\r\n            onClick={() => onSearch('')}\r\n            className=\"btn btn-secondary mt-1\"\r\n          >\r\n            <span className=\"fa fa-refresh mr-1\" />\r\n            REFRESH\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row no-gutters \">\r\n        <div className=\"col-6 d-flex justify-content-start \">\r\n          {renderAddBtn()}\r\n          {renderRefreshBtn()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 mb-2 mt-3\" style={{ padding: 0 }}>\r\n        <SearchForm {...paginateProps} />\r\n      </div>\r\n      <Loader isLoaded={total > 0}>\r\n        <Table\r\n          columns={withColumnActions()}\r\n          data={transformAnimes()}\r\n          sortColumn={sortColumn}\r\n          onSort={handleSort}\r\n        />\r\n        <Paginate {...paginateProps} />\r\n      </Loader>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(Animes)\r\n","import React from 'react'\r\n\r\nconst HeaderTitle = ({ total, title }) => {\r\n  return (\r\n    <div className=\"row no-gutters align-items-center\">\r\n      <div className=\"col  d-flex justify-content-start align-items-center\">\r\n        <span>\r\n          <h1 className=\"mb-3\">{title}</h1>\r\n        </span>\r\n        <h5>\r\n          <span className=\"badge badge-pill badge-primary ml-2\">{total}</span>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeaderTitle\r\n","import React, { useContext, memo } from 'react'\r\n\r\nimport { AnimeContext } from './../context'\r\nimport AnimesTable from './animes/animesTable'\r\n\r\nimport HeaderTitle from './partials/headerTitle'\r\n\r\nconst Home = () => {\r\n  const { state } = useContext(AnimeContext)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HeaderTitle total={state.total} title={'Animes'} />\r\n      <AnimesTable />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(Home)\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>\r\n}\r\n\r\nexport default NotFound\r\n","import { useEffect, useReducer } from 'react'\r\nimport { mapToSelect } from '../services/utilsService'\r\nimport {\r\n  getGenres,\r\n  getStudios,\r\n  getSeasons,\r\n  getTypes\r\n} from '../services/animeService'\r\n\r\nexport const SET_GENRES = 'SET_GENRES'\r\nexport const SET_STUDIOS = 'SET_STUDIOS'\r\nexport const SET_SEASONS = 'SET_SEASONS'\r\nexport const SET_TYPES = 'SET_TYPES'\r\n\r\nconst useAnime = () => {\r\n  const reducer = (state, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n      case SET_GENRES:\r\n        return { ...state, genres: payload }\r\n      case SET_STUDIOS:\r\n        return { ...state, studios: payload }\r\n      case SET_SEASONS:\r\n        return { ...state, seasons: payload }\r\n      case SET_TYPES:\r\n        return { ...state, types: payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  const initialState = {\r\n    genres: [],\r\n    studios: [],\r\n    types: [],\r\n    seasons: []\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    getGenres().then(response => {\r\n      dispatch({\r\n        type: SET_GENRES,\r\n        payload: response.genres.map(g => {\r\n          return mapToSelect(g)\r\n        })\r\n      })\r\n    })\r\n\r\n    getStudios().then(response => {\r\n      dispatch({\r\n        type: SET_STUDIOS,\r\n        payload: response.studios.map(g => {\r\n          return mapToSelect(g)\r\n        })\r\n      })\r\n    })\r\n\r\n    dispatch({\r\n      type: SET_SEASONS,\r\n      payload: getSeasons\r\n    })\r\n    dispatch({\r\n      type: SET_TYPES,\r\n      payload: getTypes\r\n    })\r\n  }, [])\r\n\r\n  return { state, dispatch }\r\n}\r\n\r\nexport default useAnime\r\n","import React from 'react'\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {/* {error && <div className=\"alert p-2 mt-2 alert-danger\">{error}</div>} */}\n      {error && <p className=\"text-danger p-2 \">{error}</p>}\n    </div>\n  )\n}\n\nexport default Input\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Input from './input'\r\nimport DatePicker from 'react-datepicker'\r\nimport Select from 'react-select'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nconst Form = props => {\r\n  const [isDisable, setIsDisable] = useState(false)\r\n\r\n  const { data, setData } = props.data || {}\r\n  const { errors, setErrors } = props.errors || {}\r\n  const schema = { ...props.schema }\r\n\r\n  const validate = () => {\r\n    const options = { abortEarly: false }\r\n    const { error } = Joi.validate(data, schema, options)\r\n\r\n    if (!error) return null\r\n\r\n    const errors = {}\r\n    for (let item of error.details) errors[item.path[0]] = item.message\r\n    return errors\r\n  }\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value }\r\n\r\n    const _schema = { [name]: schema[name] }\r\n\r\n    const { error } = Joi.validate(obj, _schema)\r\n\r\n    return error ? error.details[0].message : null\r\n  }\r\n\r\n  const handleSubmit = (e, doSubmit) => {\r\n    e.preventDefault()\r\n\r\n    const errors = validate()\r\n    setErrors(errors || {})\r\n    if (errors) return\r\n\r\n    setIsDisable(true)\r\n    doSubmit(e, data)\r\n    setIsDisable(false)\r\n  }\r\n\r\n  const handleChange = ({ currentTarget: input }) => {\r\n    const _errors = { ...errors }\r\n    const errorMessage = validateProperty(input)\r\n\r\n    if (errorMessage) _errors[input.name] = errorMessage\r\n    else delete _errors[input.name]\r\n\r\n    const newErrors = checkConfirmPassword(input, _errors, data.password)\r\n\r\n    const _data = { ...data }\r\n    _data[input.name] = input.value\r\n\r\n    setData(_data)\r\n    setErrors(newErrors)\r\n  }\r\n\r\n  const checkConfirmPassword = (input, errors, password) => {\r\n    const newErrors = { ...errors }\r\n    if (input.name === 'confirmPassword') {\r\n      if (input.value === password) {\r\n        delete newErrors[input.name]\r\n      }\r\n    }\r\n    return newErrors\r\n  }\r\n\r\n  const renderInput = (name, label, type = 'text', rest) => {\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={handleChange}\r\n        error={errors[name]}\r\n        {...rest}\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderSelect = (name, label, value, onChange, options, rest) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <Select\r\n          {...rest}\r\n          isSearchable\r\n          isClearable\r\n          value={value}\r\n          onChange={onChange}\r\n          options={options}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderButton = (label, icon) => {\r\n    return (\r\n      <button\r\n        disabled={validate() || Object.keys(errors).length > 0 || isDisable}\r\n        className=\"btn btn-primary mt-3\"\r\n      >\r\n        <span className={`${icon} mr-1`} />\r\n        {label}\r\n      </button>\r\n    )\r\n  }\r\n\r\n  const renderDatePicker = (name, label, rest) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <div>\r\n          <DatePicker\r\n            peekNextMonth\r\n            showMonthDropdown\r\n            showYearDropdown\r\n            dropdownMode=\"select\"\r\n            placeholderText=\"Select a date\"\r\n            className=\"form-control\"\r\n            value={data[name]}\r\n            {...rest}\r\n          />\r\n        </div>\r\n        {errors[name] && (\r\n          <div className=\"alert p-2 mt-2 alert-danger\">{errors[name]}</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderTextArea = (name, label, row = 3) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <textarea\r\n          value={data[name]}\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          id={name}\r\n          rows={row}\r\n          name={name}\r\n        />\r\n        {errors[name] && (\r\n          <div className=\"alert p-2 mt-2 alert-danger\">{errors[name]}</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e, props.onSubmit)}>\r\n      {props.children({\r\n        renderButton,\r\n        renderInput,\r\n        renderTextArea,\r\n        renderDatePicker,\r\n        renderSelect\r\n      })}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst BackButton = props => {\r\n  const handleBack = () => props.history.goBack()\r\n  return (\r\n    <React.Fragment>\r\n      <span className=\" d-flex justify-content-end\" />\r\n      <button onClick={handleBack} className=\"btn btn-secondary\">\r\n        <span className=\"fa fa-arrow-left mr-1\" />\r\n        BACK\r\n      </button>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default BackButton\r\n","import React, { memo, useEffect, useState, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Joi from 'joi-browser'\r\nimport Loader from '../partials/loader'\r\nimport useAnime from '../../hooks/useAnime'\r\nimport withAuth from '../hoc/withAuth'\r\nimport Form from '../partials/form'\r\n\r\nimport { AnimeContext } from './../../context'\r\nimport { formatDate, mapToSelect } from '../../services/utilsService'\r\nimport { toast } from 'react-toastify'\r\nimport { getAnime, putAnime, postAnime } from './../../services/animeService'\r\nimport BackButton from './../partials/backButton'\r\n\r\nconst AnimeForm = ({ auth, ...props }) => {\r\n  const context = useContext(AnimeContext)\r\n  const id = props.match.params.id\r\n\r\n  const {\r\n    state: { genres, studios, seasons, types }\r\n  } = useAnime()\r\n\r\n  const [anime, setAnime] = useState({\r\n    id: 0,\r\n    title: '',\r\n    description: '',\r\n    season: '',\r\n    type: '',\r\n    genres: [],\r\n    studios: [],\r\n    releaseDate: ''\r\n  })\r\n\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const [selectedGenres, setSelectedGenres] = useState([])\r\n  const [selectedStudios, setSelectedStudios] = useState([])\r\n  const [selectedSeason, setSelectedSeason] = useState(null)\r\n  const [selectedType, setSelectedType] = useState(null)\r\n\r\n  const schema = {\r\n    id: Joi.number().integer(),\r\n    title: Joi.string()\r\n      .min(3)\r\n      .required()\r\n      .label('Title'),\r\n    description: Joi.optional(),\r\n    season: Joi.optional(),\r\n    type: Joi.optional(),\r\n    releaseDate: Joi.optional(),\r\n    imageUrl: Joi.optional(),\r\n    genres: Joi.array().optional(),\r\n    studios: Joi.array().optional()\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadAnime()\r\n  }, [])\r\n\r\n  const loadAnime = async () => {\r\n    try {\r\n      if (id === 'new') return\r\n\r\n      let { anime } = await getAnime(id)\r\n\r\n      const {\r\n        selectedGenres,\r\n        selectedStudios,\r\n        selectedSeason,\r\n        selectedType\r\n      } = mapToData(anime)\r\n\r\n      anime.releaseDate = formatDate(anime.releaseDate)\r\n\r\n      setAnime(anime)\r\n      setSelectedGenres(selectedGenres)\r\n      setSelectedStudios(selectedStudios)\r\n      setSelectedSeason(selectedSeason)\r\n      setSelectedType(selectedType)\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 404)\r\n        props.history.replace('/not-found')\r\n    }\r\n  }\r\n\r\n  const mapToData = anime => {\r\n    const selectedGenres = anime.genres.map(g => {\r\n      return mapToSelect(g)\r\n    })\r\n    const selectedStudios = anime.studios.map(s => {\r\n      return mapToSelect(s)\r\n    })\r\n    const selectedSeason = mapToSelect({ id: null, name: anime.season })\r\n    const selectedType = mapToSelect({ id: null, name: anime.type })\r\n    return { selectedGenres, selectedStudios, selectedSeason, selectedType }\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    if (!auth.isAdmin()) {\r\n      toast.error('Unauthorized user')\r\n      return\r\n    }\r\n\r\n    const _anime = { ...anime }\r\n\r\n    _anime.genreIds = selectedGenres.map(g => g.id) || []\r\n    _anime.studioIds = selectedStudios.map(s => s.id) || []\r\n    _anime.season = selectedSeason ? selectedSeason.value : ''\r\n    _anime.type = selectedType ? selectedType.value : ''\r\n\r\n    if (_anime.releaseDate) {\r\n      _anime.releaseDate = new Date(_anime.releaseDate).toISOString()\r\n    } else {\r\n      delete _anime.releaseDate\r\n    }\r\n\r\n    _anime.id ? await putAnime(_anime.id, _anime) : await postAnime(_anime)\r\n\r\n    _anime.id ? toast.success('Updated') : toast.success('Added')\r\n\r\n    props.history.replace('/')\r\n\r\n    context.onRefresh()\r\n  }\r\n\r\n  const handleChangeGenres = selectedGenres => setSelectedGenres(selectedGenres)\r\n\r\n  const handleChangeSeason = selectedSeason => setSelectedSeason(selectedSeason)\r\n\r\n  const handleChangeType = selectedType => setSelectedType(selectedType)\r\n\r\n  const handleChangeStudios = selectedStudios =>\r\n    setSelectedStudios(selectedStudios)\r\n\r\n  const handleDateChange = date => {\r\n    const _anime = { ...anime }\r\n\r\n    _anime.releaseDate = formatDate(date)\r\n\r\n    setAnime(_anime)\r\n  }\r\n\r\n  const renderAdd = to => {\r\n    return (\r\n      <span className=\"\">\r\n        <Link to={to}>\r\n          <button className=\"add-btn btn  btn-secondary btn-md \">...</button>\r\n        </Link>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Loader isLoaded={studios.length > 0 || id === 'new'}>\r\n      <div className=\"col-8 offset-2\">\r\n        <h1>{id !== 'new' ? 'Edit Form' : 'Add Form'}</h1>\r\n\r\n        <span className=\" d-flex justify-content-end\">\r\n          <BackButton {...props} />\r\n        </span>\r\n        <Form\r\n          data={{ data: anime, setData: setAnime }}\r\n          errors={{ errors, setErrors }}\r\n          onSubmit={handleSubmit}\r\n          schema={schema}\r\n        >\r\n          {({\r\n            renderButton,\r\n            renderInput,\r\n            renderSelect,\r\n            renderTextArea,\r\n            renderDatePicker\r\n          }) => {\r\n            return (\r\n              <React.Fragment>\r\n                {renderInput('title', 'Title')}\r\n\r\n                {renderTextArea('description', 'Description')}\r\n\r\n                {renderSelect(\r\n                  'type',\r\n                  'Type',\r\n                  selectedType,\r\n                  handleChangeType,\r\n                  types\r\n                )}\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    {renderSelect(\r\n                      'season',\r\n                      'Season',\r\n                      selectedSeason,\r\n                      handleChangeSeason,\r\n                      seasons\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    {renderDatePicker('releaseDate', 'Release', {\r\n                      onChange: handleDateChange\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-11\">\r\n                    {renderSelect(\r\n                      'genreIds',\r\n                      'Genres',\r\n                      selectedGenres,\r\n                      handleChangeGenres,\r\n                      genres,\r\n                      { isMulti: true }\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-1 mt-4\">{renderAdd('/genres/new')}</div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-11\">\r\n                    {renderSelect(\r\n                      'studioIds',\r\n                      'Studios',\r\n                      selectedStudios,\r\n                      handleChangeStudios,\r\n                      studios,\r\n                      { isMulti: true }\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-1 mt-4\">{renderAdd('/studios/new')}</div>\r\n                </div>\r\n\r\n                {renderInput('imageUrl', 'Image Url')}\r\n\r\n                {renderButton(id !== 'new' ? 'UPDATE' : 'SAVE', 'fa fa-save')}\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Form>\r\n        <style jsx=\"\">{`\r\n          .add-btn {\r\n            margin-top: 7px;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    </Loader>\r\n  )\r\n}\r\n\r\nexport default memo(withAuth(AnimeForm))\r\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport withAuth from '../hoc/withAuth'\r\nimport { capitalize } from '../../services/utilsService'\r\nimport { toast } from 'react-toastify'\r\nimport Form from '../partials/form'\r\n\r\nconst LoginForm = ({ auth, ...props }) => {\r\n  const [user, setUser] = useState({ username: '', password: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label('Username'),\r\n    password: Joi.string()\r\n      .required()\r\n      .label('Password')\r\n  }\r\n\r\n  const handleSubmit = async (e, data) => {\r\n    try {\r\n      await auth.login(data)\r\n      toast.success(`Welcome, ${capitalize(data.username)}`)\r\n      props.history.replace('/home')\r\n    } catch ({ response }) {\r\n      if (response && response.status === 401) {\r\n        toast.error(response.data.status.errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-6 offset-3 mt-5\">\r\n      <h1>Login</h1>\r\n      <Form\r\n        data={{ data: user, setData: setUser }}\r\n        errors={{ errors, setErrors }}\r\n        onSubmit={handleSubmit}\r\n        schema={schema}\r\n      >\r\n        {({ renderButton, renderInput }) => {\r\n          return (\r\n            <React.Fragment>\r\n              {renderInput('username', 'Username')}\r\n              {renderInput('password', 'Password', 'password')}\r\n              {renderButton('Login')}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuth(LoginForm)\r\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport { capitalize } from './../../services/utilsService'\r\nimport withAuth from '../hoc/withAuth'\r\nimport { toast } from 'react-toastify'\r\nimport Form from '../partials/form'\r\n\r\nconst RegisterForm = ({ auth, ...props }) => {\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n    confirmPassword: ''\r\n  })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Username'),\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label('Email'),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Password'),\r\n    confirmPassword: Joi.string()\r\n      .required()\r\n      .valid(Joi.ref('password'))\r\n      .options({ language: { any: { allowOnly: 'not match' } } })\r\n      .label('Password')\r\n  }\r\n\r\n  const handleCheckUser = async ({ currentTarget: input }) => {\r\n    const { isTaken } =\r\n      input.name === 'username'\r\n        ? await auth.isUsernameTaken(input.value)\r\n        : await auth.isEmailTaken(input.value)\r\n\r\n    const _errors = { ...errors }\r\n\r\n    if (isTaken) {\r\n      _errors[input.name] = `\"${capitalize(input.name)}\" is taken`\r\n    } else {\r\n      delete _errors[input.name]\r\n    }\r\n\r\n    setErrors(_errors)\r\n\r\n    return _errors\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    const _errors = await handleCheckUser(e)\r\n\r\n    if (Object.keys(_errors).length > 0) return\r\n\r\n    const _user = { ...user }\r\n\r\n    try {\r\n      await auth.register(_user)\r\n\r\n      toast.success('Welcome, ' + capitalize(user.username))\r\n\r\n      setUser({\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        confirmPassword: ''\r\n      })\r\n      setErrors(_errors)\r\n      props.history.replace('/')\r\n    } catch ({ response }) {\r\n      if (response && response.status === 400) {\r\n        toast.error(response.data.status.errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-6 offset-3 mt-5\">\r\n      <h1>Register</h1>\r\n      <Form\r\n        data={{ data: user, setData: setUser }}\r\n        errors={{ errors, setErrors }}\r\n        onSubmit={handleSubmit}\r\n        schema={schema}\r\n      >\r\n        {({ renderButton, renderInput }) => {\r\n          return (\r\n            <React.Fragment>\r\n              {renderInput('username', 'Username', 'text', {\r\n                onBlur: handleCheckUser\r\n              })}\r\n              {renderInput('email', 'Email', 'email', {\r\n                onBlur: handleCheckUser\r\n              })}\r\n              {renderInput('password', 'Password', 'password')}\r\n              {renderInput('confirmPassword', 'Confirm Password', 'password')}\r\n              {renderButton('Register')}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuth(RegisterForm)\r\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport withAuth from '../hoc/withAuth'\n\nconst AuthRoute = ({\n  isAdmin = false,\n  auth,\n  path,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!auth.isValidUser())\n          return (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: props.location }\n              }}\n            />\n          )\n\n        if (isAdmin && !auth.isAdmin()) {\n          return <Redirect to=\"/not-found\" />\n        }\n        return Component ? <Component {...props} /> : render(props)\n      }}\n    />\n  )\n}\n\nexport default withAuth(AuthRoute)\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport withAuth from '../hoc/withAuth'\r\nconst GuestRoute = ({ auth, path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (auth.isValidUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/',\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        return Component ? <Component {...props} /> : render(props)\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default withAuth(GuestRoute)\r\n","import { useEffect, useReducer } from 'react'\r\nimport { SET_ITEMS } from './types'\r\n\r\nconst useRequest = (request, items) => {\r\n  const reducer = (state, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n      case SET_ITEMS:\r\n        return { ...state, [items]: payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  const initialState = {\r\n    [items]: []\r\n  }\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    request().then(response => {\r\n      dispatch({ type: SET_ITEMS, payload: response[items] })\r\n    })\r\n  }, [])\r\n\r\n  return { state, dispatch }\r\n}\r\n\r\nexport default useRequest\r\n","import React, { useState } from 'react'\r\nimport useRequest from './../../hooks/useRequest'\r\nimport { getGenres } from './../../services/animeService'\r\nimport { sortBy } from './../../services/utilsService'\r\nimport { Link } from 'react-router-dom'\r\nimport Table from './../partials/table'\r\nimport { SET_ITEMS } from './../../hooks/types'\r\nimport HeaderTitle from '../partials/headerTitle'\r\n\r\nconst GenresTable = () => {\r\n  const {\r\n    state: { genres },\r\n    dispatch\r\n  } = useRequest(getGenres, 'genres')\r\n\r\n  const [sortColumn, setSortColumn] = useState({ path: 'name', order: 'asc' })\r\n\r\n  const columns = [\r\n    {\r\n      path: 'name',\r\n      label: 'Name',\r\n      content: genre => <Link to={`/genres/${genre.id}`}>{genre.name}</Link>\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: genre => (\r\n        <div className=\"d-flex\">\r\n          <Link to={`/genres/${genre.id}`}>\r\n            <button className=\"btn btn-warning btn-sm mr-1 fa fa-pencil text-white\" />\r\n          </Link>\r\n          <button className=\"btn btn-danger btn-sm fa fa-trash text-white\" />\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const handleSort = sortColumn => {\r\n    dispatch({ type: SET_ITEMS, payload: sortBy(genres, sortColumn) })\r\n    setSortColumn(sortColumn)\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-6 offset-3 \">\r\n      <HeaderTitle total={genres.length} title={'Genres'} />\r\n      <Table\r\n        columns={columns}\r\n        data={genres}\r\n        sortColumn={sortColumn}\r\n        onSort={handleSort}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenresTable\r\n","import http from './httpService'\r\nimport auth from './authService'\r\n\r\nexport function postGenre(genre) {\r\n  http.setJwt(auth.jwt())\r\n  return http.post('/api/genres', genre).then(data => data.data)\r\n}\r\n","import React, { useState } from 'react'\r\nimport Form from '../partials/form'\r\nimport Joi from 'joi-browser'\r\nimport { postGenre } from '../../services/genreService'\r\nimport { toast } from 'react-toastify'\r\nimport BackButton from './../partials/backButton'\r\n\r\nconst GenreForm = props => {\r\n  const [genre, setGenre] = useState({ id: 0, name: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    id: Joi.number().integer(),\r\n    name: Joi.string()\r\n      .required()\r\n      .label('Name')\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await postGenre(genre)\r\n      toast.success('Added')\r\n      handleBack()\r\n    } catch ({ response }) {\r\n      if (response && response.data.status.code === 400) {\r\n        const _errors = { ...errors }\r\n        _errors.name = response.data.status.error\r\n        setErrors(_errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleBack = () => props.history.goBack()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-6 offset-3\">\r\n        <h1>Add Genre</h1>\r\n        <span className=\" d-flex justify-content-end\">\r\n          <BackButton {...props} />\r\n        </span>\r\n        <Form\r\n          data={{ data: genre, setData: setGenre }}\r\n          errors={{ errors, setErrors }}\r\n          schema={schema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ renderInput, renderButton }) => {\r\n            return (\r\n              <React.Fragment>\r\n                {renderInput('name', 'Name')}\r\n                {renderButton('Save')}\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Form>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default GenreForm\r\n","import http from './httpService'\r\nimport auth from './authService'\r\n\r\nexport function postStudio(studio) {\r\n  http.setJwt(auth.jwt())\r\n  return http.post('/api/studios', studio).then(data => data.data)\r\n}\r\n","import React, { useState, memo } from 'react'\r\nimport Form from '../partials/form'\r\nimport Joi from 'joi-browser'\r\nimport { postStudio } from '../../services/studioService'\r\nimport { toast } from 'react-toastify'\r\nimport BackButton from './../partials/backButton'\r\n\r\nconst StudioForm = props => {\r\n  const [studio, setStudio] = useState({ id: 0, name: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    id: Joi.number().integer(),\r\n    name: Joi.string()\r\n      .required()\r\n      .label('Name')\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await postStudio(studio)\r\n      toast.success('Added')\r\n      handleBack()\r\n    } catch ({ response }) {\r\n      if (response && response.data.status.code === 400) {\r\n        const _errors = { ...errors }\r\n        _errors.name = response.data.status.error\r\n        setErrors(_errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleBack = () => props.history.goBack()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-6 offset-3\">\r\n        <h1>Add Studio</h1>\r\n        <span className=\" d-flex justify-content-end\">\r\n          <BackButton {...props} />\r\n        </span>\r\n        <Form\r\n          data={{ data: studio, setData: setStudio }}\r\n          errors={{ errors, setErrors }}\r\n          schema={schema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ renderInput, renderButton }) => {\r\n            return (\r\n              <React.Fragment>\r\n                {renderInput('name', 'Name')}\r\n                {renderButton('Save')}\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Form>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(StudioForm)\r\n","import React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n\r\nimport Home from './components/home'\r\nimport NotFound from './components/partials/notFound'\r\nimport AnimeForm from './components/animes/animeForm'\r\nimport LoginForm from './components/auth/loginForm'\r\nimport RegisterForm from './components/auth/registerForm'\r\nimport AuthRoute from './components/partials/authRoute'\r\nimport GuestRoute from './components/partials/guestRoute'\r\nimport GenresTable from './components/genres/genresTable'\r\nimport GenreForm from './components/genres/genreForm'\r\nimport StudioForm from './components/studious/studioForm'\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <AuthRoute path=\"/home\" component={Home} />\r\n      <GuestRoute path=\"/login\" component={LoginForm} />\r\n      <GuestRoute path=\"/register\" component={RegisterForm} />\r\n      <AuthRoute isAdmin path=\"/animes/:id\" component={AnimeForm} />\r\n      <AuthRoute isAdmin path=\"/studios/new\" component={StudioForm} />\r\n      <AuthRoute isAdmin path=\"/genres/new\" component={GenreForm} />\r\n      <AuthRoute path=\"/genres\" component={GenresTable} />\r\n      <Route path=\"/not-found\" component={NotFound} />>\r\n      <Redirect from=\"/\" exact to=\"/home\" />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\nimport { ToastContainer } from 'react-toastify'\nimport AnimeProvider from './providers/animeProvider'\nimport Nav from './components/partials/nav'\nimport Routes from './routes'\n\nimport './App.css'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <AnimeProvider>\n        <Nav />\n        <ToastContainer autoClose={3000} />\n        <main className=\"container\">\n          <Routes />\n        </main>\n      </AnimeProvider>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n//import * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'font-awesome/css/font-awesome.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n//serviceWorker.unregister()\n"],"sourceRoot":""}