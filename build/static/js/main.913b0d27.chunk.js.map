{"version":3,"sources":["hooks/usePagination.js","hooks/types.js","context.js","services/utilsService.js","services/httpService.js","services/authService.js","services/animeService.js","providers/animeProvider.jsx","components/hoc/withAuth.jsx","components/partials/nav.jsx","components/partials/tableHeader.jsx","components/partials/tableBody.jsx","components/partials/table.jsx","components/animes/paginate.jsx","components/animes/searchForm.jsx","components/partials/loader.jsx","components/animes/animesTable.jsx","components/partials/headerTitle.jsx","components/home.jsx","components/partials/notFound.jsx","hooks/useAnime.js","components/partials/input.jsx","components/partials/form.jsx","components/partials/backButton.jsx","components/animes/animeForm.jsx","components/auth/loginForm.jsx","components/auth/registerForm.jsx","components/partials/authRoute.jsx","components/partials/guestRoute.jsx","hooks/useRequest.js","components/genres/genresTable.jsx","services/genreService.js","components/genres/genreForm.jsx","services/studioService.js","components/studious/studioForm.jsx","routes.jsx","App.js","index.js"],"names":["reducer","state","action","payload","type","Object","objectSpread","pageNum","items","pages","total","start","end","toggle","title","usePagination","_ref","request","_ref$data","data","_ref$pages","_ref$total","_ref$take","take","initialState","pagination","pageNumbers","_useReducer","useReducer","_useReducer2","slicedToArray","_useReducer2$","rest","objectWithoutProperties","dispatch","useEffect","then","response","catch","_ref2","status","toast","error","AnimeContext","React","createContext","sortBy","sortColumn","_","orderBy","path","order","formatDate","date","Date","toLocaleDateString","mapToSelect","id","name","label","capitalize","value","str","startCase","axios","interceptors","use","Promise","reject","throwError","config","baseURL","process","API_URL","apiURL","httpService","get","post","put","delete","setJwt","token","headers","Authorization","concat","saveJwt","refreshToken","localStorage","setItem","_callee","user","regenerator_default","a","wrap","_context","prev","next","http","jwt","abrupt","sent","stop","this","_callee2","_context2","_callee3","_context3","removeTokens","removeItem","getDecodeToken","getItem","jwtDecode","ex","authService","login","register","logout","getCurrentUser","isUsernameTaken","username","isEmailTaken","email","isValidUser","isAdmin","getPagedAnimes","num","limit","arguments","length","undefined","getGenres","getAnime","getSeasons","getTypes","postAnime","anime","auth","putAnime","memo","props","_usePagination","perPage","_usePagination$state","animes","handleDelete","asyncToGenerator","mark","originalAnimes","_animes","toConsumableArray","filter","t0","_x","apply","react_default","createElement","Provider","onDelete","onRefresh","onPageChange","onSort","onSearch","onSetStart","onSetEnd","children","withAuth","Component","assign","handleLogout","Fragment","className","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","href","onClick","jsx","TableHeader","columns","map","column","i","key","raiseSort","renderSortIcon","TableBody","item","content","renderCell","Table","tableHeader","tableBody","Paginate","PAGE_NUMBERS","_useContext","useContext","_useContext$state","handleDecrementStart","handleDecrementEnd","handlePageChange","_pageNum","doNext","isNavHidden","isFirstDisabled","isLastDisabled","arr","push","createArray","SearchForm","_useState","useState","_useState2","setTitle","handleSubmit","e","preventDefault","onSubmit","onChange","target","placeholder","Loader","isLoaded","role","setSortColumn","renderItemsName","genres","studios","doDelete","_ref3","style","padding","searchForm","loader","table","c","releaseDate","paginate","HeaderTitle","headerTitle","animesTable","NotFound","useAnime","seasons","types","g","Input","htmlFor","Form","isDisable","setIsDisable","setData","errors","setErrors","schema","validate","Joi","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","details","Symbol","iterator","done","message","err","return","handleChange","_ref4","input","currentTarget","_errors","errorMessage","obj","defineProperty","_schema","validateProperty","newErrors","checkConfirmPassword","password","_data","doSubmit","renderButton","icon","disabled","keys","renderInput","partials_input","renderTextArea","row","rows","renderDatePicker","es","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","placeholderText","renderSelect","options","react_select_esm","isSearchable","isClearable","BackButton","history","goBack","context","match","params","_useAnime$state","description","season","setAnime","_useState3","_useState4","_useState5","_useState6","selectedGenres","setSelectedGenres","_useState7","_useState8","selectedStudios","setSelectedStudios","_useState9","_useState10","selectedSeason","setSelectedSeason","_useState11","_useState12","selectedType","setSelectedType","number","integer","string","min","required","optional","imageUrl","array","loadAnime","_anime","_mapToData","_selectedGenres","_selectedStudios","_selectedSeason","_selectedType","mapToData","replace","s","genreIds","studioIds","toISOString","success","handleChangeGenres","handleChangeSeason","handleChangeType","handleChangeStudios","handleDateChange","renderAdd","backButton","partials_form","_ref5","isMulti","setUser","_x2","confirmPassword","valid","ref","language","any","allowOnly","handleCheckUser","isTaken","_user","_ref7","onBlur","_ref$isAdmin","component","render","Route","Redirect","pathname","from","location","useRequest","GenresTable","_useRequest","genre","postGenre","GenreForm","setGenre","handleBack","code","postStudio","studio","setStudio","Routes","Switch","authRoute","Home","guestRoute","LoginForm","RegisterForm","AnimeForm","StudioForm","exact","App","animeProvider","nav","lib","autoClose","routes","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.913b0d27.chunk.js","sourcesContent":["import { useEffect, useReducer } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { pagination } from '../config.json'\r\n\r\nimport {\r\n  SET_ITEMS,\r\n  SET_PAGENUM,\r\n  SET_PAGES,\r\n  SET_TOTAL,\r\n  SET_REFRESH,\r\n  SEARCH_ITEMS,\r\n  SET_START,\r\n  SET_END\r\n} from './types'\r\n\r\nconst reducer = (state, action) => {\r\n  const { payload, type } = action\r\n  switch (type) {\r\n    case SET_PAGENUM:\r\n      return { ...state, pageNum: payload }\r\n    case SET_ITEMS:\r\n      return { ...state, items: payload }\r\n    case SET_PAGES:\r\n      return { ...state, pages: payload }\r\n    case SET_TOTAL:\r\n      return { ...state, total: payload }\r\n    case SET_START:\r\n      return { ...state, start: payload }\r\n    case SET_END:\r\n      return { ...state, end: payload }\r\n    case SET_REFRESH:\r\n      return { ...state, toggle: payload }\r\n    case SEARCH_ITEMS:\r\n      return { ...state, title: payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// customize the properties of response data in the usePagination arguments\r\n//\r\n//\r\n// consume usePagination e.g.\r\n// const { state: { items: movies, pageNum, pages, total }, dispatch}\r\n// = usePagination({ request: getMovies, take: 10, total: 'count', pages: 'pagesCount', data: 'movies' })\r\n\r\nconst usePagination = ({\r\n  request,\r\n  data = 'data',\r\n  pages = 'lastPage',\r\n  total = 'total',\r\n  take = 15\r\n}) => {\r\n  const initialState = {\r\n    items: [],\r\n    pageNum: 1,\r\n    pages: 0,\r\n    total: 0,\r\n    take,\r\n    toggle: false,\r\n    start: 1,\r\n    end: pagination.pageNumbers\r\n  }\r\n  const [{ toggle, title, pageNum, ...rest }, dispatch] = useReducer(\r\n    reducer,\r\n    initialState\r\n  )\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_ITEMS, payload: [] })\r\n    request(pageNum, take, title)\r\n      .then(response => {\r\n        dispatch({ type: SET_ITEMS, payload: response[data] })\r\n        dispatch({ type: SET_PAGES, payload: response[pages] })\r\n        dispatch({ type: SET_TOTAL, payload: response[total] })\r\n      })\r\n      .catch(({ response }) => {\r\n        if (response && response.status === 404) {\r\n          dispatch({ type: SET_ITEMS, payload: [] })\r\n          dispatch({ type: SET_PAGES, payload: 0 })\r\n          dispatch({ type: SET_TOTAL, payload: 0 })\r\n          dispatch({ type: SET_PAGENUM, payload: 1 })\r\n          toast.error('No result/s found')\r\n        }\r\n      })\r\n  }, [toggle, title, pageNum])\r\n\r\n  return {\r\n    state: { toggle, pageNum, take, ...rest },\r\n    dispatch\r\n  }\r\n}\r\n\r\nexport default usePagination\r\n","export const SET_ITEMS = 'SET_ITEMS' // array\r\nexport const SET_PAGENUM = 'SET_PAGENUM' // number, active page\r\nexport const SET_PAGES = 'SET_PAGES' // number, total no. of pages\r\nexport const SET_TOTAL = 'SET_TOTAL' // number, total no. of items\r\nexport const SET_REFRESH = 'SET_REFRESH' // boolean, do reload page\r\nexport const SET_START = 'SET_START'\r\nexport const SET_END = 'SET_END'\r\nexport const SEARCH_ITEMS = 'SEARCH_ITEMS'\r\nexport const DELETE_ITEM = 'DELETE_ITEM'\r\n","import React from 'react'\r\n\r\nexport const AnimeContext = React.createContext({})\r\n","import _ from 'lodash'\r\n\r\nexport function sortBy(items, sortColumn) {\r\n  return _.orderBy(items, [sortColumn.path], [sortColumn.order])\r\n}\r\n\r\nexport function toElipse(str, end = 20) {\r\n  const x = str.substring(0, end)\r\n  const hasElipse = str.length > end ? '...' : ''\r\n  return `${x} ${hasElipse}`\r\n}\r\n\r\nexport const formatDate = date => {\r\n  return date ? new Date(date).toLocaleDateString() : null\r\n}\r\n\r\nexport const createArray = (start, end) => {\r\n  let arr = []\r\n  for (let i = start; i <= end; i++) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n\r\nexport const mapToSelect = ({ id, name }) => {\r\n  return { id, label: capitalize(name), value: name }\r\n}\r\n\r\nexport const capitalize = str => _.startCase(str)\r\n","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { appUrl as apiURL } from '../config.json'\r\n\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    return throwError(error)\r\n  }\r\n)\r\n\r\naxios.interceptors.request.use(config => {\r\n  config.baseURL = process.env.API_URL || apiURL\r\n  return config\r\n})\r\n\r\nfunction setJwt({ token }) {\r\n  axios.interceptors.request.use(config => {\r\n    config.headers.Authorization = `Bearer ${token}`\r\n\r\n    return config\r\n  })\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  axios,\r\n  setJwt\r\n}\r\n\r\nfunction throwError(error) {\r\n  if (\r\n    error.response &&\r\n    error.response.data.status &&\r\n    error.response.data.status.name === 'ExpiredJwtToken'\r\n  ) {\r\n    toast.error('jwt is expired')\r\n    return Promise.reject(error)\r\n  }\r\n\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500\r\n  if (!expectedError) {\r\n    toast.error('An unexpected error occurrred.')\r\n  }\r\n\r\n  return Promise.reject(error)\r\n\r\n  // if (error.response && error.response.data.status.name === 'ExpiredJwtToken') {\r\n  //   if (!isRefreshing) {\r\n  //     isRefreshing = true\r\n  //     axios.interceptors.request.use(config => {\r\n  //       config.headers.Authorization = `Bearer ${localStorage.getItem(\r\n  //         'access-token'\r\n  //       )}`\r\n\r\n  //       return config\r\n  //     })\r\n  //     axios\r\n  //       .post('/token/refresh', {\r\n  //         refreshToken: localStorage.getItem('refresh-token')\r\n  //       })\r\n  //       .then((data,x) => {\r\n  //         console.log(data,x)\r\n  //         // saveJwt(data.data.jwt)\r\n  //         isRefreshing = false\r\n  //       })\r\n  //   }\r\n  //   return config\r\n  // }\r\n}\r\n","import http from './httpService'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nfunction saveJwt({ token, refreshToken }) {\r\n  localStorage.setItem('access-token', token)\r\n  localStorage.setItem('refresh-token', refreshToken)\r\n}\r\n\r\nasync function login(user) {\r\n  return await http.post('/auth/login', user).then(data => {\r\n    saveJwt(data.data.jwt)\r\n  })\r\n}\r\n\r\nasync function register(user) {\r\n  const { jwt } = await http\r\n    .post('/auth/register', user)\r\n    .then(data => data.data)\r\n\r\n  if (!jwt) return false\r\n\r\n  saveJwt(jwt)\r\n  return true\r\n}\r\n\r\nasync function logout() {\r\n  http.setJwt(jwt())\r\n  removeTokens()\r\n  await http.post('/token/revoke', { refreshToken: jwt().refreshToken })\r\n}\r\n\r\nfunction removeTokens() {\r\n  localStorage.removeItem('refresh-token')\r\n  localStorage.removeItem('access-token')\r\n}\r\n\r\nfunction getDecodeToken() {\r\n  try {\r\n    const token = localStorage.getItem('access-token')\r\n    return { ...jwtDecode(token) }\r\n  } catch (ex) {\r\n    return null\r\n  }\r\n}\r\n\r\nconst getCurrentUser = () =>\r\n  getDecodeToken() ? { ...getDecodeToken().data } : null\r\n\r\nconst isValidUser = () => (getDecodeToken() ? true : false)\r\n\r\nconst isAdmin = () => (getDecodeToken() ? getDecodeToken().data.isAdmin : null)\r\n\r\nfunction isUsernameTaken(username) {\r\n  return http.get('/auth/is-taken?username=' + username).then(data => data.data)\r\n}\r\n\r\nfunction isEmailTaken(email) {\r\n  return http.get('/auth/is-taken?email=' + email).then(data => data.data)\r\n}\r\n\r\nconst jwt = () => {\r\n  return {\r\n    token: localStorage.getItem('access-token'),\r\n    refreshToken: localStorage.getItem('refresh-token')\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  register,\r\n  logout,\r\n  getCurrentUser,\r\n  isUsernameTaken,\r\n  isEmailTaken,\r\n  jwt,\r\n  isValidUser,\r\n  isAdmin\r\n}\r\n","import http from './httpService'\r\nimport auth from './authService'\r\n\r\nexport function getAnimes() {\r\n  return http.get('/api/animes').then(data => data.data)\r\n}\r\n\r\nexport function getPagedAnimes(num, limit, title = '') {\r\n\r\n  return http\r\n    .get(`/api/animes/page/${num}?limit=${limit}&title=${title}`)\r\n    .then(data => data.data.data)\r\n}\r\n\r\nexport function getGenres() {\r\n  return http.get('/api/genres').then(data => data.data)\r\n}\r\n\r\nexport function getStudios() {\r\n  return http.get('/api/studios').then(data => data.data)\r\n}\r\n\r\nexport function getAnime(id) {\r\n  return http.get(`/api/animes/${id}`).then(data => data.data)\r\n}\r\n\r\nexport const getSeasons = [\r\n  { label: 'Winter', value: 'winter' },\r\n  { label: 'Spring', value: 'spring' },\r\n  { label: 'Summer', value: 'summer' },\r\n  { label: 'Fall', value: 'fall' }\r\n]\r\n\r\nexport const getTypes = [\r\n  { label: 'TV', value: 'tv' },\r\n  { label: 'Movie', value: 'movie' },\r\n  { label: 'OVA', value: 'ova' },\r\n  { label: 'ONA', value: 'ona' },\r\n  { label: 'Other', value: 'other' }\r\n]\r\n\r\nexport function postAnime(anime) {\r\n  http.setJwt(auth.jwt())\r\n  return http.post('/api/animes', anime).then(data => data.data)\r\n}\r\n\r\nexport function putAnime(id, anime) {\r\n  http.setJwt(auth.jwt())\r\n  return http.put('/api/animes/' + id, anime).then(data => data.data)\r\n}\r\n\r\nexport function deleteAnime(id) {\r\n  http.setJwt(auth.jwt())\r\n  return http.delete('/api/animes/' + id).then(data => data.data)\r\n}\r\n","import React, { memo } from 'react'\r\nimport usePagination from '../hooks/usePagination'\r\nimport { AnimeContext } from '../context'\r\nimport { pagination } from '../config.json'\r\nimport { sortBy } from '../services/utilsService'\r\nimport { getPagedAnimes, deleteAnime } from '../services/animeService'\r\nimport {\r\n  SET_REFRESH,\r\n  SET_ITEMS,\r\n  SET_PAGENUM,\r\n  SEARCH_ITEMS,\r\n  SET_START,\r\n  SET_END\r\n} from './../hooks/types'\r\n\r\nconst AnimeProvider = props => {\r\n  const {\r\n    state: { pageNum, items: animes, pages, total, ...rest },\r\n    dispatch\r\n  } = usePagination({ request: getPagedAnimes, take: pagination.perPage })\r\n\r\n  const handleRefresh = () => {\r\n    dispatch({ type: SET_REFRESH, payload: toggle => !toggle })\r\n  }\r\n\r\n  const handlePageChange = pageNum => {\r\n    dispatch({ type: SET_PAGENUM, payload: pageNum })\r\n  }\r\n\r\n  const handleDelete = async anime => {\r\n    let originalAnimes = [...animes]\r\n\r\n    try {\r\n      const _animes = originalAnimes.filter(a => a.id !== anime.id)\r\n\r\n      dispatch({ type: SET_ITEMS, payload: _animes })\r\n\r\n      await deleteAnime(anime.id)\r\n      return _animes.length > 0\r\n    } catch (error) {\r\n      dispatch({ type: SET_ITEMS, payload: originalAnimes })\r\n      return originalAnimes.length > 0\r\n    }\r\n  }\r\n\r\n  const handleSort = sortColumn => {\r\n    dispatch({ type: SET_ITEMS, payload: sortBy(animes, sortColumn) })\r\n  }\r\n\r\n  const handleSearch = title => {\r\n    dispatch({ type: SEARCH_ITEMS, payload: title })\r\n  }\r\n\r\n  const handleSetStart = start => {\r\n    dispatch({ type: SET_START, payload: start })\r\n  }\r\n\r\n  const handleSetEnd = end => {\r\n    dispatch({ type: SET_END, payload: end })\r\n  }\r\n\r\n  return (\r\n    <AnimeContext.Provider\r\n      value={{\r\n        state: { animes, pages, pageNum, total, ...rest },\r\n        onDelete: handleDelete,\r\n        onRefresh: handleRefresh,\r\n        onPageChange: handlePageChange,\r\n        onSort: handleSort,\r\n        onSearch: handleSearch,\r\n        onSetStart: handleSetStart,\r\n        onSetEnd: handleSetEnd\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AnimeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default memo(AnimeProvider)\r\n","import React from 'react'\r\nimport auth from '../../services/authService'\r\n\r\nconst withAuth = Component => {\r\n  return props => {\r\n    return <Component auth={auth} {...props} />\r\n  }\r\n}\r\n\r\nexport default withAuth\r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { capitalize } from '../../services/utilsService'\r\nimport withAuth from '../hoc/withAuth'\r\n\r\nconst Nav = ({ auth, ...props }) => {\r\n  const handleLogout = async () => {\r\n    await auth.logout()\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            KITCHANIME\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div\r\n            className=\"collapse navbar-collapse d-flex justify-content-end\"\r\n            id=\"navbarNav\"\r\n          >\r\n            <ul className=\"navbar-nav\">\r\n              {auth.isValidUser() && (\r\n                <React.Fragment>\r\n                  <i className=\"fa fa-user  text-warning\" />\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link active\" to=\"/home\">\r\n                      {capitalize(auth.getCurrentUser().username)}\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      className=\"nav-link\"\r\n                      href=\"/login\"\r\n                      onClick={handleLogout}\r\n                    >\r\n                      Logout\r\n                    </a>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n\r\n              {!auth.isValidUser() && (\r\n                <React.Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/login\">\r\n                      Login\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/register\">\r\n                      Register\r\n                    </NavLink>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <style jsx=\"\">{`\r\n          .navbar {\r\n            margin-bottom: 20px;\r\n          }\r\n          .fa-user {\r\n            margin-top: 12px !important;\r\n          }import withAuth from './../auth/registerForm';\r\n\r\n        `}</style>\r\n      </nav>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(Nav)\r\n","import React from 'react'\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nconst TableHeader = props => {\n  const raiseSort = path => {\n    const sortColumn = { ...props.sortColumn }\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc'\n    else {\n      sortColumn.path = path\n      sortColumn.order = 'asc'\n    }\n    props.onSort(sortColumn)\n  }\n\n  const renderSortIcon = column => {\n    const { sortColumn } = props\n\n    if (!column.path) return null\n\n    if (column.path !== sortColumn.path) return null\n\n    if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\" />\n    return <i className=\"fa fa-sort-desc\" />\n  }\n\n  return (\n    <thead className=\"thead-dark\">\n      <tr>\n        {props.columns.map((column, i) => (\n          <th\n            className=\"clickable\"\n            key={i}\n            onClick={() => raiseSort(column.path)}\n          >\n            {column.label} {renderSortIcon(column)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\n\nexport default TableHeader\n","import React from 'react'\nimport _ from 'lodash'\n\nconst TableBody = ({ data, columns }) => {\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item)\n\n    return _.get(item, column.path)\n  }\n\n  return (\n    <tbody>\n      {data.map(item => (\n        <tr key={item.id}>\n          {columns.map((column, i) => (\n            <td key={i}>{renderCell(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  )\n}\n\nexport default TableBody\n","import React from 'react'\nimport TableHeader from './tableHeader'\nimport TableBody from './tableBody'\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table table-bordered table-hover \">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  )\n}\n\nexport default Table\n","import React, { useContext, useEffect } from 'react'\r\nimport { AnimeContext } from '../../context'\r\nimport { createArray } from '../../services/utilsService'\r\nimport { pagination } from '../../config.json'\r\n\r\nconst Paginate = props => {\r\n  const { pageNumbers: PAGE_NUMBERS } = pagination\r\n\r\n  const {\r\n    state: { pageNum, pages, start, end },\r\n    onPageChange,\r\n    onSetStart,\r\n    onSetEnd\r\n  } = useContext(AnimeContext)\r\n\r\n  //reset start end when delete is 0 in paged\r\n  useEffect(() => {\r\n    if (end > pages && start !== 1) {\r\n      handleDecrementStart()\r\n      handleDecrementEnd()\r\n    }\r\n  }, [pageNum])\r\n\r\n  const handleIncrementStart = () => onSetStart(start + 1)\r\n\r\n  const handleDecrementStart = () => onSetStart(start - 1)\r\n\r\n  const handleIncrementEnd = () => onSetEnd(end + 1)\r\n\r\n  const handleDecrementEnd = () => onSetEnd(end - 1)\r\n\r\n  const handlePageChange = _pageNum => {\r\n    if (pageNum === _pageNum) return\r\n    onPageChange(_pageNum)\r\n  }\r\n  const doNext = pageNum => {\r\n    handlePageChange(pageNum + 1)\r\n    if (end === pages) return\r\n    handleIncrementStart()\r\n    handleIncrementEnd()\r\n  }\r\n  const doPrev = _pageNum => {\r\n    handlePageChange(_pageNum - 1)\r\n\r\n    if (start === 1) return\r\n    handleDecrementStart()\r\n    handleDecrementEnd()\r\n  }\r\n\r\n  const renderPages = () => {\r\n    let _end = pages < PAGE_NUMBERS ? pages : end\r\n\r\n    return createArray(start, _end).map(_pageNum => (\r\n      <li\r\n        key={_pageNum}\r\n        className={pageNum === _pageNum ? 'page-item active' : 'page-item'}\r\n      >\r\n        <button\r\n          className=\"page-link\"\r\n          onClick={() => handlePageChange(_pageNum)}\r\n        >\r\n          {_pageNum}\r\n        </button>\r\n      </li>\r\n    ))\r\n  }\r\n\r\n  const isNavHidden = () => {\r\n    return pages > PAGE_NUMBERS\r\n  }\r\n\r\n  const isPagesHidden = () => {\r\n    return pages > 1\r\n  }\r\n\r\n  const isFirstDisabled = () => {\r\n    return pageNum === 1 ? 'disabled' : ''\r\n  }\r\n\r\n  const isLastDisabled = () => {\r\n    return pages === pageNum ? 'disabled' : ''\r\n  }\r\n\r\n  const prevPage = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <li className={`page-item ${isFirstDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={() => {\r\n              if (pageNum === 1) return\r\n              handlePageChange(1)\r\n              onSetStart(1)\r\n              onSetEnd(PAGE_NUMBERS)\r\n            }}\r\n          >\r\n            {'first'}\r\n          </button>\r\n        </li>\r\n\r\n        <li className={`page-item ${isFirstDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Previous\"\r\n            onClick={() => doPrev(pageNum)}\r\n          >\r\n            &laquo;\r\n          </button>\r\n        </li>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const nextPage = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <li className={`page-item ${isLastDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Next\"\r\n            onClick={() => doNext(pageNum)}\r\n          >\r\n            &raquo;\r\n          </button>\r\n        </li>\r\n\r\n        <li className={`page-item ${isLastDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={() => {\r\n              handlePageChange(pages)\r\n              onSetStart(pages - (PAGE_NUMBERS - 1))\r\n              onSetEnd(pages)\r\n            }}\r\n          >\r\n            {'last'}\r\n          </button>\r\n        </li>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const pageOf = () => {\r\n    return (\r\n      <div className=\"pages px-0 col d-flex justify-content-end\">\r\n        <p className=\"page-of\">{`${pageNum} of ${pages}`}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col d-flex justify-content-start px-0\">\r\n          <nav>\r\n            <ul className=\"pagination\">\r\n              {isNavHidden() && prevPage()}\r\n\r\n              {isPagesHidden() && renderPages()}\r\n\r\n              {isNavHidden() && nextPage()}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        {pageOf()}\r\n        <style jsx=\"\">\r\n          {`\r\n            .pages {\r\n              text-align: right;\r\n            }\r\n            .page-of {\r\n              margin-top: 10px;\r\n            }\r\n          `}\r\n        </style>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useContext, useState } from 'react'\r\nimport { AnimeContext } from '../../context'\r\nimport { pagination } from '../../config.json'\r\n\r\nconst SearchForm = props => {\r\n  const { onPageChange, onSearch, onSetEnd, onSetStart } = useContext(\r\n    AnimeContext\r\n  )\r\n  const [title, setTitle] = useState('')\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault()\r\n    if (!title) return\r\n    onSetStart(1)\r\n    onSetEnd(pagination.pageNumbers)\r\n    onPageChange(1)\r\n    onSearch(title)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type={'text'}\r\n          name={title}\r\n          value={title}\r\n          onChange={e => setTitle(e.target.value)}\r\n          className=\"form-control\"\r\n          placeholder=\"Search title\"\r\n        />\r\n        <button className=\"btn-search btn btn-primary ml-2\">\r\n          <span className=\"fa fa-search mr-1\" />\r\n          SEARCH\r\n        </button>\r\n      </form>\r\n      <style jsx=\"\">{`\r\n        form {\r\n          display: flex;\r\n        }\r\n        .btn-search {\r\n          width: 13%;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\n\r\nconst Loader = ({ isLoaded, children }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {!isLoaded && (\r\n        <div className=\"spin d-flex justify-content-center justify-items-center\">\r\n          <div className=\"spinner spinner-grow\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isLoaded && children}\r\n      <style jsx=\"\">{`\r\n        .spin {\r\n          position: fixed;\r\n          z-index: 1031;\r\n          top: 40%;\r\n          left: 50%;\r\n          transform: translate(-50%, -50%);\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AnimeContext } from '../../context'\r\nimport Table from '../partials/table'\r\nimport { formatDate } from '../../services/utilsService'\r\nimport withAuth from '../hoc/withAuth'\r\nimport { toast } from 'react-toastify'\r\nimport Paginate from './paginate'\r\nimport SearchForm from './searchForm'\r\nimport Loader from './../partials/loader'\r\n\r\nconst Animes = ({ auth }) => {\r\n  const {\r\n    state: { animes, pageNum, start, end },\r\n    onDelete,\r\n    onRefresh,\r\n    onPageChange,\r\n    onSort,\r\n    onSearch,\r\n    onSetStart,\r\n    onSetEnd\r\n  } = useContext(AnimeContext)\r\n\r\n  const [sortColumn, setSortColumn] = useState({ path: 'name', order: 'asc' })\r\n\r\n  const columns = [\r\n    {\r\n      path: 'title',\r\n      label: 'Title',\r\n      content: anime => <Link to={`/animes/${anime.id}`}>{anime.title}</Link>\r\n    },\r\n    { path: 'season', label: 'Season' },\r\n    {\r\n      path: 'releaseDate',\r\n      label: 'Release'\r\n    },\r\n    {\r\n      path: 'type',\r\n      label: 'Type'\r\n    },\r\n    {\r\n      label: 'Genres',\r\n      content: anime => renderItemsName(anime.genres)\r\n    },\r\n    {\r\n      label: 'Studios',\r\n      content: anime => renderItemsName(anime.studios)\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: anime => (\r\n        <div className=\"\">\r\n          <Link to={`/animes/${anime.id}`}>\r\n            <button className=\"btn btn-warning btn-sm mr-1 text-white\">\r\n              <span className=\"fa fa-pencil mr-1\" />\r\n              EDIT\r\n            </button>\r\n          </Link>\r\n          <button\r\n            onClick={async () => await doDelete(anime)}\r\n            className=\"btn btn-danger btn-sm text-white\"\r\n          >\r\n            <span className=\"fa fa-trash mr-1\" />\r\n            DELETE\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const doDelete = async anime => {\r\n    if (!auth.isAdmin()) {\r\n      toast.error('Unauthorized user')\r\n      return\r\n    }\r\n\r\n    if (!(await onDelete(anime))) {\r\n      onPageChange(pageNum - 1)\r\n      if (start > 1) {\r\n        onSetStart(start - 1)\r\n      }\r\n      onSetEnd(end - 1)\r\n      return\r\n    }\r\n    onRefresh()\r\n  }\r\n\r\n  const renderItemsName = items => {\r\n    return items.map((item, i) => (\r\n      <span key={i} className=\"badge ml-1  badge-secondary\">\r\n        {item.name}\r\n      </span>\r\n    ))\r\n  }\r\n\r\n  const transformAnimes = () => {\r\n    return animes.map(anime => {\r\n      // not included to table anymore\r\n      // anime.description = toElipse(anime.description || '', 20)\r\n      // anime.imageUrl = toElipse(anime.imageUrl || '', 20)\r\n      anime.releaseDate = formatDate(anime.releaseDate)\r\n      return anime\r\n    })\r\n  }\r\n\r\n  const handleSort = sortColumn => {\r\n    onSort(sortColumn)\r\n    setSortColumn(sortColumn)\r\n  }\r\n\r\n  const withColumnActions = () => {\r\n    if (auth.isAdmin()) return columns\r\n\r\n    const _columns = [...columns]\r\n    return _columns.filter(c => c.key !== 'actions')\r\n  }\r\n\r\n  const renderAddBtn = () => {\r\n    return (\r\n      auth.isAdmin() && (\r\n        <Link to=\"/animes/new\">\r\n          <button className=\"btn btn-success mr-2 mt-1\">\r\n            <span className=\"fa fa-plus mr-1\" />\r\n            NEW ANIME\r\n          </button>\r\n        </Link>\r\n      )\r\n    )\r\n  }\r\n  const renderRefreshBtn = () => {\r\n    return (\r\n      <div>\r\n        <Link to=\"/\">\r\n          <button\r\n            onClick={() => onSearch('')}\r\n            className=\"btn btn-secondary mt-1\"\r\n          >\r\n            <span className=\"fa fa-refresh mr-1\" />\r\n            REFRESH\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row no-gutters \">\r\n        <div className=\"col-6 d-flex justify-content-start \">\r\n          {renderAddBtn()}\r\n          {renderRefreshBtn()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 mb-2 mt-3\" style={{ padding: 0 }}>\r\n        <SearchForm />\r\n      </div>\r\n      <Loader isLoaded={animes.length > 0}>\r\n        <Table\r\n          columns={withColumnActions()}\r\n          data={transformAnimes()}\r\n          sortColumn={sortColumn}\r\n          onSort={handleSort}\r\n        />\r\n        <Paginate />\r\n      </Loader>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(Animes)\r\n","import React from 'react'\r\n\r\nconst HeaderTitle = ({ total, title }) => {\r\n  return (\r\n    <div className=\"row no-gutters align-items-center\">\r\n      <div className=\"col  d-flex justify-content-start align-items-center\">\r\n        <span>\r\n          <h1 className=\"mb-3\">{title}</h1>\r\n        </span>\r\n        <h5>\r\n          <span className=\"badge badge-pill badge-primary ml-2\">{total}</span>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeaderTitle\r\n","import React, { useContext, memo } from 'react'\r\n\r\nimport { AnimeContext } from './../context'\r\nimport AnimesTable from './animes/animesTable'\r\n\r\nimport HeaderTitle from './partials/headerTitle'\r\n\r\nconst Home = () => {\r\n  const { state } = useContext(AnimeContext)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HeaderTitle total={state.total} title={'Animes'} />\r\n      <AnimesTable />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(Home)\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>\r\n}\r\n\r\nexport default NotFound\r\n","import { useEffect, useReducer } from 'react'\r\nimport { mapToSelect } from '../services/utilsService'\r\nimport {\r\n  getGenres,\r\n  getStudios,\r\n  getSeasons,\r\n  getTypes\r\n} from '../services/animeService'\r\n\r\nexport const SET_GENRES = 'SET_GENRES'\r\nexport const SET_STUDIOS = 'SET_STUDIOS'\r\nexport const SET_SEASONS = 'SET_SEASONS'\r\nexport const SET_TYPES = 'SET_TYPES'\r\n\r\nconst useAnime = () => {\r\n  const reducer = (state, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n      case SET_GENRES:\r\n        return { ...state, genres: payload }\r\n      case SET_STUDIOS:\r\n        return { ...state, studios: payload }\r\n      case SET_SEASONS:\r\n        return { ...state, seasons: payload }\r\n      case SET_TYPES:\r\n        return { ...state, types: payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  const initialState = {\r\n    genres: [],\r\n    studios: [],\r\n    types: [],\r\n    seasons: []\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    getGenres().then(response => {\r\n      dispatch({\r\n        type: SET_GENRES,\r\n        payload: response.genres.map(g => {\r\n          return mapToSelect(g)\r\n        })\r\n      })\r\n    })\r\n\r\n    getStudios().then(response => {\r\n      dispatch({\r\n        type: SET_STUDIOS,\r\n        payload: response.studios.map(g => {\r\n          return mapToSelect(g)\r\n        })\r\n      })\r\n    })\r\n\r\n    dispatch({\r\n      type: SET_SEASONS,\r\n      payload: getSeasons\r\n    })\r\n    dispatch({\r\n      type: SET_TYPES,\r\n      payload: getTypes\r\n    })\r\n  }, [])\r\n\r\n  return { state, dispatch }\r\n}\r\n\r\nexport default useAnime\r\n","import React from 'react'\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {/* {error && <div className=\"alert p-2 mt-2 alert-danger\">{error}</div>} */}\n      {error && <p className=\"text-danger p-2 \">{error}</p>}\n    </div>\n  )\n}\n\nexport default Input\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Input from './input'\r\nimport DatePicker from 'react-datepicker'\r\nimport Select from 'react-select'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nconst Form = props => {\r\n  const [isDisable, setIsDisable] = useState(false)\r\n\r\n  const { data, setData } = props.data || {}\r\n  const { errors, setErrors } = props.errors || {}\r\n  const schema = { ...props.schema }\r\n\r\n  const validate = () => {\r\n    const options = { abortEarly: false }\r\n    const { error } = Joi.validate(data, schema, options)\r\n\r\n    if (!error) return null\r\n\r\n    const errors = {}\r\n    for (let item of error.details) errors[item.path[0]] = item.message\r\n    return errors\r\n  }\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value }\r\n\r\n    const _schema = { [name]: schema[name] }\r\n\r\n    const { error } = Joi.validate(obj, _schema)\r\n\r\n    return error ? error.details[0].message : null\r\n  }\r\n\r\n  const handleSubmit = (e, doSubmit) => {\r\n    e.preventDefault()\r\n\r\n    const errors = validate()\r\n    setErrors(errors || {})\r\n    if (errors) return\r\n\r\n    setIsDisable(true)\r\n    doSubmit(e, data)\r\n    setIsDisable(false)\r\n  }\r\n\r\n  const handleChange = ({ currentTarget: input }) => {\r\n    const _errors = { ...errors }\r\n    const errorMessage = validateProperty(input)\r\n\r\n    if (errorMessage) _errors[input.name] = errorMessage\r\n    else delete _errors[input.name]\r\n\r\n    const newErrors = checkConfirmPassword(input, _errors, data.password)\r\n\r\n    const _data = { ...data }\r\n    _data[input.name] = input.value\r\n\r\n    setData(_data)\r\n    setErrors(newErrors)\r\n  }\r\n\r\n  const checkConfirmPassword = (input, errors, password) => {\r\n    const newErrors = { ...errors }\r\n    if (input.name === 'confirmPassword') {\r\n      if (input.value === password) {\r\n        delete newErrors[input.name]\r\n      }\r\n    }\r\n    return newErrors\r\n  }\r\n\r\n  const renderInput = (name, label, type = 'text', rest) => {\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={handleChange}\r\n        error={errors[name]}\r\n        {...rest}\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderSelect = (name, label, value, onChange, options, rest) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <Select\r\n          {...rest}\r\n          isSearchable\r\n          isClearable\r\n          value={value}\r\n          onChange={onChange}\r\n          options={options}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderButton = (label, icon) => {\r\n    return (\r\n      <button\r\n        disabled={validate() || Object.keys(errors).length > 0 || isDisable}\r\n        className=\"btn btn-primary mt-3\"\r\n      >\r\n        <span className={`${icon} mr-1`} />\r\n        {label}\r\n      </button>\r\n    )\r\n  }\r\n\r\n  const renderDatePicker = (name, label, rest) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <div>\r\n          <DatePicker\r\n            peekNextMonth\r\n            showMonthDropdown\r\n            showYearDropdown\r\n            dropdownMode=\"select\"\r\n            placeholderText=\"Select a date\"\r\n            className=\"form-control\"\r\n            value={data[name]}\r\n            {...rest}\r\n          />\r\n        </div>\r\n        {errors[name] && (\r\n          <div className=\"alert p-2 mt-2 alert-danger\">{errors[name]}</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderTextArea = (name, label, row = 3) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <textarea\r\n          value={data[name]}\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          id={name}\r\n          rows={row}\r\n          name={name}\r\n        />\r\n        {errors[name] && (\r\n          <div className=\"alert p-2 mt-2 alert-danger\">{errors[name]}</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e, props.onSubmit)}>\r\n      {props.children({\r\n        renderButton,\r\n        renderInput,\r\n        renderTextArea,\r\n        renderDatePicker,\r\n        renderSelect\r\n      })}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst BackButton = props => {\r\n  const handleBack = () => props.history.goBack()\r\n  return (\r\n    <React.Fragment>\r\n      <span className=\" d-flex justify-content-end\" />\r\n      <button onClick={handleBack} className=\"btn btn-secondary\">\r\n        <span className=\"fa fa-arrow-left mr-1\" />\r\n        BACK\r\n      </button>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default BackButton\r\n","import React, { memo, useEffect, useState, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Joi from 'joi-browser'\r\nimport Loader from '../partials/loader'\r\nimport useAnime from '../../hooks/useAnime'\r\nimport withAuth from '../hoc/withAuth'\r\nimport Form from '../partials/form'\r\n\r\nimport { AnimeContext } from './../../context'\r\nimport { formatDate, mapToSelect } from '../../services/utilsService'\r\nimport { toast } from 'react-toastify'\r\nimport { getAnime, putAnime, postAnime } from './../../services/animeService'\r\nimport BackButton from './../partials/backButton'\r\n\r\nconst AnimeForm = ({ auth, ...props }) => {\r\n  const context = useContext(AnimeContext)\r\n  const id = props.match.params.id\r\n\r\n  const {\r\n    state: { genres, studios, seasons, types }\r\n  } = useAnime()\r\n\r\n  const [anime, setAnime] = useState({\r\n    id: 0,\r\n    title: '',\r\n    description: '',\r\n    season: '',\r\n    type: '',\r\n    releaseDate: '',\r\n    genres: [],\r\n    studios: []\r\n  })\r\n\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const [selectedGenres, setSelectedGenres] = useState([])\r\n  const [selectedStudios, setSelectedStudios] = useState([])\r\n  const [selectedSeason, setSelectedSeason] = useState(null)\r\n  const [selectedType, setSelectedType] = useState(null)\r\n\r\n  const schema = {\r\n    id: Joi.number().integer(),\r\n    title: Joi.string()\r\n      .min(3)\r\n      .required()\r\n      .label('Title'),\r\n    description: Joi.optional(),\r\n    season: Joi.optional(),\r\n    type: Joi.optional(),\r\n    releaseDate: Joi.optional(),\r\n    imageUrl: Joi.optional(),\r\n    genres: Joi.array().optional(),\r\n    studios: Joi.array().optional()\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadAnime()\r\n  }, [])\r\n\r\n  const loadAnime = async () => {\r\n    try {\r\n      if (id === 'new') return\r\n\r\n      let { anime } = await getAnime(id)\r\n\r\n      const {\r\n        selectedGenres,\r\n        selectedStudios,\r\n        selectedSeason,\r\n        selectedType\r\n      } = mapToData(anime)\r\n\r\n      anime.releaseDate = formatDate(anime.releaseDate)\r\n\r\n      setAnime(anime)\r\n      setSelectedGenres(selectedGenres)\r\n      setSelectedStudios(selectedStudios)\r\n      setSelectedSeason(selectedSeason)\r\n      setSelectedType(selectedType)\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 404)\r\n        props.history.replace('/not-found')\r\n    }\r\n  }\r\n\r\n  const mapToData = anime => {\r\n    const selectedGenres = anime.genres.map(g => {\r\n      return mapToSelect(g)\r\n    })\r\n    const selectedStudios = anime.studios.map(s => {\r\n      return mapToSelect(s)\r\n    })\r\n    const selectedSeason = mapToSelect({ id: null, name: anime.season })\r\n    const selectedType = mapToSelect({ id: null, name: anime.type })\r\n    return { selectedGenres, selectedStudios, selectedSeason, selectedType }\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    if (!auth.isAdmin()) {\r\n      toast.error('Unauthorized user')\r\n      return\r\n    }\r\n\r\n    const _anime = { ...anime }\r\n\r\n    _anime.genreIds = selectedGenres.map(g => g.id) || []\r\n    _anime.studioIds = selectedStudios.map(s => s.id) || []\r\n    _anime.season = selectedSeason ? selectedSeason.value : null\r\n    _anime.type = selectedType ? selectedType.value : null\r\n\r\n    if (_anime.releaseDate) {\r\n      _anime.releaseDate = new Date(_anime.releaseDate).toISOString()\r\n    } else {\r\n      delete _anime.releaseDate\r\n    }\r\n\r\n    _anime.id ? await putAnime(_anime.id, _anime) : await postAnime(_anime)\r\n\r\n    _anime.id ? toast.success('Updated') : toast.success('Added')\r\n\r\n    props.history.replace('/')\r\n\r\n    context.onRefresh()\r\n  }\r\n\r\n  const handleChangeGenres = selectedGenres => setSelectedGenres(selectedGenres)\r\n\r\n  const handleChangeSeason = selectedSeason => setSelectedSeason(selectedSeason)\r\n\r\n  const handleChangeType = selectedType => setSelectedType(selectedType)\r\n\r\n  const handleChangeStudios = selectedStudios =>\r\n    setSelectedStudios(selectedStudios)\r\n\r\n  const handleDateChange = date => {\r\n    const _anime = { ...anime }\r\n\r\n    _anime.releaseDate = formatDate(date)\r\n\r\n    setAnime(_anime)\r\n  }\r\n\r\n  const renderAdd = to => {\r\n    return (\r\n      <span className=\"\">\r\n        <Link to={to}>\r\n          <button className=\"add-btn btn  btn-secondary btn-md \">...</button>\r\n        </Link>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Loader isLoaded={studios.length > 0 || id === 'new'}>\r\n      <div className=\"col-8 offset-2\">\r\n        <h1>{id !== 'new' ? 'Edit Form' : 'Add Form'}</h1>\r\n\r\n        <span className=\" d-flex justify-content-end\">\r\n          <BackButton {...props} />\r\n        </span>\r\n        <Form\r\n          data={{ data: anime, setData: setAnime }}\r\n          errors={{ errors, setErrors }}\r\n          onSubmit={handleSubmit}\r\n          schema={schema}\r\n        >\r\n          {({\r\n            renderButton,\r\n            renderInput,\r\n            renderSelect,\r\n            renderTextArea,\r\n            renderDatePicker\r\n          }) => {\r\n            return (\r\n              <React.Fragment>\r\n                {renderInput('title', 'Title')}\r\n\r\n                {renderTextArea('description', 'Description')}\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    {renderSelect(\r\n                      'season',\r\n                      'Season',\r\n                      selectedSeason,\r\n                      handleChangeSeason,\r\n                      seasons\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    {renderDatePicker('releaseDate', 'Release', {\r\n                      onChange: handleDateChange\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                {renderSelect(\r\n                  'type',\r\n                  'Type',\r\n                  selectedType,\r\n                  handleChangeType,\r\n                  types\r\n                )}\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-11\">\r\n                    {renderSelect(\r\n                      'genreIds',\r\n                      'Genres',\r\n                      selectedGenres,\r\n                      handleChangeGenres,\r\n                      genres,\r\n                      { isMulti: true }\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-1 mt-4\">{renderAdd('/genres/new')}</div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-11\">\r\n                    {renderSelect(\r\n                      'studioIds',\r\n                      'Studios',\r\n                      selectedStudios,\r\n                      handleChangeStudios,\r\n                      studios,\r\n                      { isMulti: true }\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-1 mt-4\">{renderAdd('/studios/new')}</div>\r\n                </div>\r\n\r\n                {renderInput('imageUrl', 'Image Url')}\r\n\r\n                {renderButton(id !== 'new' ? 'UPDATE' : 'SAVE', 'fa fa-save')}\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Form>\r\n        <style jsx=\"\">{`\r\n          .add-btn {\r\n            margin-top: 7px;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    </Loader>\r\n  )\r\n}\r\n\r\nexport default memo(withAuth(AnimeForm))\r\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport withAuth from '../hoc/withAuth'\r\nimport { capitalize } from '../../services/utilsService'\r\nimport { toast } from 'react-toastify'\r\nimport Form from '../partials/form'\r\n\r\nconst LoginForm = ({ auth, ...props }) => {\r\n  const [user, setUser] = useState({ username: '', password: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label('Username'),\r\n    password: Joi.string()\r\n      .required()\r\n      .label('Password')\r\n  }\r\n\r\n  const handleSubmit = async (e, data) => {\r\n    try {\r\n      await auth.login(data)\r\n      toast.success(`Welcome, ${capitalize(data.username)}`)\r\n      props.history.replace('/home')\r\n    } catch ({ response }) {\r\n      if (response && response.status === 401) {\r\n        toast.error(response.data.status.errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-6 offset-3 mt-5\">\r\n      <h1>Login</h1>\r\n      <Form\r\n        data={{ data: user, setData: setUser }}\r\n        errors={{ errors, setErrors }}\r\n        onSubmit={handleSubmit}\r\n        schema={schema}\r\n      >\r\n        {({ renderButton, renderInput }) => {\r\n          return (\r\n            <React.Fragment>\r\n              {renderInput('username', 'Username')}\r\n              {renderInput('password', 'Password', 'password')}\r\n              {renderButton('Login')}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuth(LoginForm)\r\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport { capitalize } from './../../services/utilsService'\r\nimport withAuth from '../hoc/withAuth'\r\nimport { toast } from 'react-toastify'\r\nimport Form from '../partials/form'\r\n\r\nconst RegisterForm = ({ auth, ...props }) => {\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n    confirmPassword: ''\r\n  })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Username'),\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label('Email'),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Password'),\r\n    confirmPassword: Joi.string()\r\n      .required()\r\n      .valid(Joi.ref('password'))\r\n      .options({ language: { any: { allowOnly: 'not match' } } })\r\n      .label('Password')\r\n  }\r\n\r\n  const handleCheckUser = async ({ currentTarget: input }) => {\r\n    const { isTaken } =\r\n      input.name === 'username'\r\n        ? await auth.isUsernameTaken(input.value)\r\n        : await auth.isEmailTaken(input.value)\r\n\r\n    const _errors = { ...errors }\r\n\r\n    if (isTaken) {\r\n      _errors[input.name] = `\"${capitalize(input.name)}\" is taken`\r\n    } else {\r\n      delete _errors[input.name]\r\n    }\r\n\r\n    setErrors(_errors)\r\n\r\n    return _errors\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    const _errors = await handleCheckUser(e)\r\n\r\n    if (Object.keys(_errors).length > 0) return\r\n\r\n    const _user = { ...user }\r\n\r\n    try {\r\n      await auth.register(_user)\r\n\r\n      toast.success('Welcome, ' + capitalize(user.username))\r\n\r\n      setUser({\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        confirmPassword: ''\r\n      })\r\n      setErrors(_errors)\r\n      props.history.replace('/')\r\n    } catch ({ response }) {\r\n      if (response && response.status === 400) {\r\n        toast.error(response.data.status.errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-6 offset-3 mt-5\">\r\n      <h1>Register</h1>\r\n      <Form\r\n        data={{ data: user, setData: setUser }}\r\n        errors={{ errors, setErrors }}\r\n        onSubmit={handleSubmit}\r\n        schema={schema}\r\n      >\r\n        {({ renderButton, renderInput }) => {\r\n          return (\r\n            <React.Fragment>\r\n              {renderInput('username', 'Username', 'text', {\r\n                onBlur: handleCheckUser\r\n              })}\r\n              {renderInput('email', 'Email', 'email', {\r\n                onBlur: handleCheckUser\r\n              })}\r\n              {renderInput('password', 'Password', 'password')}\r\n              {renderInput('confirmPassword', 'Confirm Password', 'password')}\r\n              {renderButton('Register')}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuth(RegisterForm)\r\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport withAuth from '../hoc/withAuth'\n\nconst AuthRoute = ({\n  isAdmin = false,\n  auth,\n  path,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!auth.isValidUser())\n          return (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: props.location }\n              }}\n            />\n          )\n\n        if (isAdmin && !auth.isAdmin()) {\n          return <Redirect to=\"/not-found\" />\n        }\n        return Component ? <Component {...props} /> : render(props)\n      }}\n    />\n  )\n}\n\nexport default withAuth(AuthRoute)\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport withAuth from '../hoc/withAuth'\r\nconst GuestRoute = ({ auth, path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (auth.isValidUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/',\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        return Component ? <Component {...props} /> : render(props)\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default withAuth(GuestRoute)\r\n","import { useEffect, useReducer } from 'react'\r\nimport { SET_ITEMS } from './types'\r\n\r\nconst useRequest = (request, items) => {\r\n  const reducer = (state, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n      case SET_ITEMS:\r\n        return { ...state, [items]: payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  const initialState = {\r\n    [items]: []\r\n  }\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    request().then(response => {\r\n      dispatch({ type: SET_ITEMS, payload: response[items] })\r\n    })\r\n  }, [])\r\n\r\n  return { state, dispatch }\r\n}\r\n\r\nexport default useRequest\r\n","import React, { useState } from 'react'\r\nimport useRequest from './../../hooks/useRequest'\r\nimport { getGenres } from './../../services/animeService'\r\nimport { sortBy } from './../../services/utilsService'\r\nimport { Link } from 'react-router-dom'\r\nimport Table from './../partials/table'\r\nimport { SET_ITEMS } from './../../hooks/types'\r\nimport HeaderTitle from '../partials/headerTitle'\r\n\r\nconst GenresTable = () => {\r\n  const {\r\n    state: { genres },\r\n    dispatch\r\n  } = useRequest(getGenres, 'genres')\r\n\r\n  const [sortColumn, setSortColumn] = useState({ path: 'name', order: 'asc' })\r\n\r\n  const columns = [\r\n    {\r\n      path: 'name',\r\n      label: 'Name',\r\n      content: genre => <Link to={`/genres/${genre.id}`}>{genre.name}</Link>\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: genre => (\r\n        <div className=\"d-flex\">\r\n          <Link to={`/genres/${genre.id}`}>\r\n            <button className=\"btn btn-warning btn-sm mr-1 fa fa-pencil text-white\" />\r\n          </Link>\r\n          <button className=\"btn btn-danger btn-sm fa fa-trash text-white\" />\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const handleSort = sortColumn => {\r\n    dispatch({ type: SET_ITEMS, payload: sortBy(genres, sortColumn) })\r\n    setSortColumn(sortColumn)\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-6 offset-3 \">\r\n      <HeaderTitle total={genres.length} title={'Genres'} />\r\n      <Table\r\n        columns={columns}\r\n        data={genres}\r\n        sortColumn={sortColumn}\r\n        onSort={handleSort}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenresTable\r\n","import http from './httpService'\r\nimport auth from './authService'\r\n\r\nexport function postGenre(genre) {\r\n  http.setJwt(auth.jwt())\r\n  return http.post('/api/genres', genre).then(data => data.data)\r\n}\r\n","import React, { useState } from 'react'\r\nimport Form from '../partials/form'\r\nimport Joi from 'joi-browser'\r\nimport { postGenre } from '../../services/genreService'\r\nimport { toast } from 'react-toastify'\r\nimport BackButton from './../partials/backButton'\r\n\r\nconst GenreForm = props => {\r\n  const [genre, setGenre] = useState({ id: 0, name: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    id: Joi.number().integer(),\r\n    name: Joi.string()\r\n      .required()\r\n      .label('Name')\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await postGenre(genre)\r\n      toast.success('Added')\r\n      handleBack()\r\n    } catch ({ response }) {\r\n      if (response && response.data.status.code === 400) {\r\n        const _errors = { ...errors }\r\n        _errors.name = response.data.status.error\r\n        setErrors(_errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleBack = () => props.history.goBack()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-6 offset-3\">\r\n        <h1>Add Genre</h1>\r\n        <span className=\" d-flex justify-content-end\">\r\n          <BackButton {...props} />\r\n        </span>\r\n        <Form\r\n          data={{ data: genre, setData: setGenre }}\r\n          errors={{ errors, setErrors }}\r\n          schema={schema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ renderInput, renderButton }) => {\r\n            return (\r\n              <React.Fragment>\r\n                {renderInput('name', 'Name')}\r\n                {renderButton('Save')}\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Form>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default GenreForm\r\n","import http from './httpService'\r\nimport auth from './authService'\r\n\r\nexport function postStudio(studio) {\r\n  http.setJwt(auth.jwt())\r\n  return http.post('/api/studios', studio).then(data => data.data)\r\n}\r\n","import React, { useState, memo } from 'react'\r\nimport Form from '../partials/form'\r\nimport Joi from 'joi-browser'\r\nimport { postStudio } from '../../services/studioService'\r\nimport { toast } from 'react-toastify'\r\nimport BackButton from './../partials/backButton'\r\n\r\nconst StudioForm = props => {\r\n  const [studio, setStudio] = useState({ id: 0, name: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    id: Joi.number().integer(),\r\n    name: Joi.string()\r\n      .required()\r\n      .label('Name')\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await postStudio(studio)\r\n      toast.success('Added')\r\n      handleBack()\r\n    } catch ({ response }) {\r\n      if (response && response.data.status.code === 400) {\r\n        const _errors = { ...errors }\r\n        _errors.name = response.data.status.error\r\n        setErrors(_errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleBack = () => props.history.goBack()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-6 offset-3\">\r\n        <h1>Add Studio</h1>\r\n        <span className=\" d-flex justify-content-end\">\r\n          <BackButton {...props} />\r\n        </span>\r\n        <Form\r\n          data={{ data: studio, setData: setStudio }}\r\n          errors={{ errors, setErrors }}\r\n          schema={schema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ renderInput, renderButton }) => {\r\n            return (\r\n              <React.Fragment>\r\n                {renderInput('name', 'Name')}\r\n                {renderButton('Save')}\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Form>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(StudioForm)\r\n","import React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n\r\nimport Home from './components/home'\r\nimport NotFound from './components/partials/notFound'\r\nimport AnimeForm from './components/animes/animeForm'\r\nimport LoginForm from './components/auth/loginForm'\r\nimport RegisterForm from './components/auth/registerForm'\r\nimport AuthRoute from './components/partials/authRoute'\r\nimport GuestRoute from './components/partials/guestRoute'\r\nimport GenresTable from './components/genres/genresTable'\r\nimport GenreForm from './components/genres/genreForm'\r\nimport StudioForm from './components/studious/studioForm'\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <AuthRoute path=\"/home\" component={Home} />\r\n      <GuestRoute path=\"/login\" component={LoginForm} />\r\n      <GuestRoute path=\"/register\" component={RegisterForm} />\r\n      <AuthRoute isAdmin path=\"/animes/:id\" component={AnimeForm} />\r\n      <AuthRoute isAdmin path=\"/studios/new\" component={StudioForm} />\r\n      <AuthRoute isAdmin path=\"/genres/new\" component={GenreForm} />\r\n      <AuthRoute path=\"/genres\" component={GenresTable} />\r\n      <Route path=\"/not-found\" component={NotFound} />>\r\n      <Redirect from=\"/\" exact to=\"/home\" />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\nimport { ToastContainer } from 'react-toastify'\nimport AnimeProvider from './providers/animeProvider'\nimport Nav from './components/partials/nav'\nimport Routes from './routes'\n\nimport './App.css'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <AnimeProvider>\n        <Nav />\n        <ToastContainer autoClose={3000} />\n        <main className=\"container\">\n          <Routes />\n        </main>\n      </AnimeProvider>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n//import * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'font-awesome/css/font-awesome.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n//serviceWorker.unregister()\n"],"sourceRoot":""}